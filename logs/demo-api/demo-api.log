demo-api : [2018-06-13 14:34:10] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@865dd6: startup date [Wed Jun 13 14:34:10 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 14:34:11] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:34:11] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$117845bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:34:11] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 14:34:12] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=d7ff50d7282699f2b37cf9940428c3e911e929dd, state=null
demo-api : [2018-06-13 14:34:12] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}]}
demo-api : [2018-06-13 14:34:12] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 14:34:12] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@604c5de8: startup date [Wed Jun 13 14:34:12 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@865dd6
demo-api : [2018-06-13 14:34:13] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 14:34:13] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 14:34:13] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 14:34:13] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 14:34:13] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=a6d6da01-eeee-34c8-a5af-00ebfbf085b7
demo-api : [2018-06-13 14:34:13] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 14:34:13] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 14:34:13] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:34:13] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$bbca00ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:34:13] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$c9105441] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:34:13] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$604ffded] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:34:13] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$117845bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:34:14] [WARN ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:558]-- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Could not load key store: class path resource [keystore.p12] cannot be resolved to URL because it does not exist
demo-api : [2018-06-13 14:34:14] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 14:34:14] [ERROR]
				[org.springframework.boot.SpringApplication:842]-- Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Could not load key store: class path resource [keystore.p12] cannot be resolved to URL because it does not exist
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:155)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.springframework.boot.web.server.WebServerException: Could not load key store: class path resource [keystore.p12] cannot be resolved to URL because it does not exist
	at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:124)
	at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSsl(SslConnectorCustomizer.java:92)
	at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.customize(SslConnectorCustomizer.java:58)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeSsl(TomcatServletWebServerFactory.java:317)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeConnector(TomcatServletWebServerFactory.java:300)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:166)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:179)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:152)
	... 8 common frames omitted
Caused by: java.io.FileNotFoundException: class path resource [keystore.p12] cannot be resolved to URL because it does not exist
	at org.springframework.util.ResourceUtils.getURL(ResourceUtils.java:137)
	at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:121)
	... 15 common frames omitted
demo-api : [2018-06-13 14:40:38] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3e6ef8ad: startup date [Wed Jun 13 14:40:38 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 14:40:39] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:40:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$845a2dee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:40:39] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 14:40:47] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 14:40:47] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 14:40:47] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 14:40:47] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56f0cc85: startup date [Wed Jun 13 14:40:47 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3e6ef8ad
demo-api : [2018-06-13 14:40:47] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 14:40:47] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 14:40:48] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 14:40:48] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 14:40:48] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=a6d6da01-eeee-34c8-a5af-00ebfbf085b7
demo-api : [2018-06-13 14:40:48] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 14:40:48] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 14:40:48] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:40:48] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$2eabe91f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:40:48] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$3bf23c74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:40:48] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$d331e620] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:40:48] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$845a2dee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:40:48] [WARN ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:558]-- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Could not load key store: class path resource [keystore.p12] cannot be resolved to URL because it does not exist
demo-api : [2018-06-13 14:40:48] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 14:40:48] [ERROR]
				[org.springframework.boot.SpringApplication:842]-- Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Could not load key store: class path resource [keystore.p12] cannot be resolved to URL because it does not exist
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:155)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.springframework.boot.web.server.WebServerException: Could not load key store: class path resource [keystore.p12] cannot be resolved to URL because it does not exist
	at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:124)
	at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSsl(SslConnectorCustomizer.java:92)
	at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.customize(SslConnectorCustomizer.java:58)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeSsl(TomcatServletWebServerFactory.java:317)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeConnector(TomcatServletWebServerFactory.java:300)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:166)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:179)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:152)
	... 8 common frames omitted
Caused by: java.io.FileNotFoundException: class path resource [keystore.p12] cannot be resolved to URL because it does not exist
	at org.springframework.util.ResourceUtils.getURL(ResourceUtils.java:137)
	at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:121)
	... 15 common frames omitted
demo-api : [2018-06-13 14:41:11] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@69e1dd28: startup date [Wed Jun 13 14:41:11 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 14:41:12] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:41:12] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3c00d019] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:41:12] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 14:41:14] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 14:41:14] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 14:41:14] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 14:41:14] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9ef8eb7: startup date [Wed Jun 13 14:41:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@69e1dd28
demo-api : [2018-06-13 14:41:15] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 14:41:15] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 14:41:15] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 14:41:15] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 14:41:15] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=a6d6da01-eeee-34c8-a5af-00ebfbf085b7
demo-api : [2018-06-13 14:41:15] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 14:41:15] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 14:41:15] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:41:16] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$e6528b4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:41:16] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$f398de9f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:41:16] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$8ad8884b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:41:16] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3c00d019] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:41:16] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https)
demo-api : [2018-06-13 14:41:16] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:41:16] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 14:41:16] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 14:41:16] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 14:41:16] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 14:41:16] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1772 ms
demo-api : [2018-06-13 14:41:18] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 14:41:18] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 14:41:18] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 14:41:18] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 14:41:18] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 14:41:18] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 14:41:18] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 14:41:18] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 14:41:18 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9ef8eb7
demo-api : [2018-06-13 14:41:18] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:41:19] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 14:41:19] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 14:41:19] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 14:41:19] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 14:41:19] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:41:19] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9ef8eb7: startup date [Wed Jun 13 14:41:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@69e1dd28
demo-api : [2018-06-13 14:41:19] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 14:41:19] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 14:41:19] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 14:41:19] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:41:19] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:41:19] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9ef8eb7: startup date [Wed Jun 13 14:41:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@69e1dd28
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 14:41:20] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=9ef8eb7,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 14:41:20] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 14:41:20] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528872081859 with initial instances count: 0
demo-api : [2018-06-13 14:41:21] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528872081866, current=UP, previous=STARTING]
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 14:41:21] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 14:41:21] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 14:41:21] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 14:41:21] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 14:41:21] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 14:41:21] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:41:21] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 14:41:21] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 14:41:22] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:206]-- Tomcat started on port(s): 8080 (https) with context path ''
demo-api : [2018-06-13 14:41:22] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:124]-- Updating port to 8080
demo-api : [2018-06-13 14:41:22] [INFO ]
				[com.enhinck.demo.DemoApiApplication:59]-- Started DemoApiApplication in 10.808 seconds (JVM running for 11.694)
demo-api : [2018-06-13 14:41:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 14:41:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 14:41:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 14:41:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 14:41:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 14:41:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: false
demo-api : [2018-06-13 14:41:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 14:41:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 14:46:21] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 14:49:27] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring FrameworkServlet 'dispatcherServlet'
demo-api : [2018-06-13 14:49:27] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:494]-- FrameworkServlet 'dispatcherServlet': initialization started
demo-api : [2018-06-13 14:49:27] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:509]-- FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
demo-api : [2018-06-13 14:51:21] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 14:52:11] [INFO ]
				[org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:132]-- Application shutdown requested.
demo-api : [2018-06-13 14:52:11] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9ef8eb7: startup date [Wed Jun 13 14:41:14 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@69e1dd28
demo-api : [2018-06-13 14:52:11] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 14:52:11] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528872731991, current=DOWN, previous=UP]
demo-api : [2018-06-13 14:52:11] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 14:52:11] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 14:52:11] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 14:52:11] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 14:52:11] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 14:52:11] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 14:52:11] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 14:52:11] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 14:52:11] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 14:52:11] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 14:52:12] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 14:52:12] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 14:41:18 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@9ef8eb7
demo-api : [2018-06-13 14:52:12] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 14:52:20] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41e1e210: startup date [Wed Jun 13 14:52:20 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 14:52:20] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:52:20] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8eb6758d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:52:21] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 14:52:23] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 14:52:23] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 14:52:23] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 14:52:23] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b619d14: startup date [Wed Jun 13 14:52:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41e1e210
demo-api : [2018-06-13 14:52:23] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 14:52:23] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=a6d6da01-eeee-34c8-a5af-00ebfbf085b7
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$390830be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$464e8413] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$dd8e2dbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8eb6758d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https)
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 14:52:24] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 14:52:25] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 14:52:25] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1722 ms
demo-api : [2018-06-13 14:52:27] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 14:52:27] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 14:52:27] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 14:52:27] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 14:52:27] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 14:52:27] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 14:52:27] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 14:52:27] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 14:52:27 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b619d14
demo-api : [2018-06-13 14:52:27] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:52:27] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 14:52:27] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 14:52:27] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 14:52:27] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 14:52:27] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b619d14: startup date [Wed Jun 13 14:52:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41e1e210
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b619d14: startup date [Wed Jun 13 14:52:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41e1e210
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 14:52:28] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 14:52:28] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5b619d14,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 14:52:29] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 14:52:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 14:52:29] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 14:52:29] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 14:52:29] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 14:52:29] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528872750473 with initial instances count: 1
demo-api : [2018-06-13 14:52:30] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528872750481, current=UP, previous=STARTING]
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 14:52:30] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 14:52:30] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 14:52:30] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 14:52:30] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 14:52:30] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 14:52:30] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 14:52:30] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 14:52:30] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:206]-- Tomcat started on port(s): 8080 (https) with context path ''
demo-api : [2018-06-13 14:52:30] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:124]-- Updating port to 8080
demo-api : [2018-06-13 14:52:30] [INFO ]
				[com.enhinck.demo.DemoApiApplication:59]-- Started DemoApiApplication in 11.19 seconds (JVM running for 12.058)
demo-api : [2018-06-13 14:52:33] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring FrameworkServlet 'dispatcherServlet'
demo-api : [2018-06-13 14:52:33] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:494]-- FrameworkServlet 'dispatcherServlet': initialization started
demo-api : [2018-06-13 14:52:33] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:509]-- FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:132]-- Application shutdown requested.
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b619d14: startup date [Wed Jun 13 14:52:23 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41e1e210
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 14:53:29] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528872809390, current=DOWN, previous=UP]
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 14:53:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 14:53:29] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 14:52:27 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b619d14
demo-api : [2018-06-13 14:53:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 14:53:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 14:53:42] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@482bce4f: startup date [Wed Jun 13 14:53:42 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 14:53:42] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:53:42] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$43cf7bcf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:53:43] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 14:53:46] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 14:53:46] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 14:53:46] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 14:53:46] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@906d29b: startup date [Wed Jun 13 14:53:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@482bce4f
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=02bf4474-b472-31a8-826b-e4bc691e5fd8
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$ee213700] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$fb678a55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$92a73401] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$43cf7bcf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https) 8080 (http)
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:53:47] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:53:48] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 14:53:48] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 14:53:48] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 14:53:48] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 14:53:48] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 14:53:48] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1693 ms
demo-api : [2018-06-13 14:53:50] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 14:53:50] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 14:53:50] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 14:53:50] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 14:53:50] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 14:53:50] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 14:53:50] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 14:53:50] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 14:53:50 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@906d29b
demo-api : [2018-06-13 14:53:50] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:53:51] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 14:53:51] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 14:53:51] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 14:53:51] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@906d29b: startup date [Wed Jun 13 14:53:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@482bce4f
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@906d29b: startup date [Wed Jun 13 14:53:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@482bce4f
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 14:53:51] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 14:53:52] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=906d29b,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 14:53:52] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 14:53:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528872833620 with initial instances count: 1
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528872833627, current=UP, previous=STARTING]
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:53:53] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8080]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8080]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 14:53:53] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Failed to deregister MBean named [Tomcat:type=ProtocolHandler,port=8080] from MBean server [com.sun.jmx.mbeanserver.JmxMBeanServer@6f94fa3e]
demo-api : [2018-06-13 14:53:53] [WARN ]
				[org.apache.catalina.util.LifecycleMBeanBase:182]-- Failed to unregister MBean with name [Tomcat:type=Connector,port=8080] during component destruction
javax.management.InstanceNotFoundException: Tomcat:type=Connector,port=8080
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)
	at org.apache.catalina.util.LifecycleMBeanBase.unregister(LifecycleMBeanBase.java:197)
	at org.apache.catalina.util.LifecycleMBeanBase.destroyInternal(LifecycleMBeanBase.java:73)
	at org.apache.catalina.connector.Connector.destroyInternal(Connector.java:1058)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardService.destroyInternal(StandardService.java:571)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardServer.destroyInternal(StandardServer.java:883)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.startup.Tomcat.destroy(Tomcat.java:389)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stop(TomcatWebServer.java:302)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.stopAndReleaseWebServer(ServletWebServerApplicationContext.java:309)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 14:53:53] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.

demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@906d29b: startup date [Wed Jun 13 14:53:46 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@482bce4f
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 14:53:53] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528872833954, current=DOWN, previous=UP]
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 14:53:53] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 14:53:50 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@906d29b
demo-api : [2018-06-13 14:53:53] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 14:53:56] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 14:53:56] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - deregister  status: 200
demo-api : [2018-06-13 14:53:56] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 14:54:31] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@a3d8174: startup date [Wed Jun 13 14:54:31 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 14:54:31] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:54:31] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b0464a40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:54:32] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 14:54:37] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 14:54:37] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 14:54:37] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 14:54:37] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e: startup date [Wed Jun 13 14:54:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@a3d8174
demo-api : [2018-06-13 14:54:38] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 14:54:38] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 14:54:38] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 14:54:38] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 14:54:38] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=02bf4474-b472-31a8-826b-e4bc691e5fd8
demo-api : [2018-06-13 14:54:38] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 14:54:38] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 14:54:38] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:54:38] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$5a980571] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:54:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$67de58c6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:54:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$ff1e0272] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:54:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b0464a40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:54:39] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https) 8080 (http)
demo-api : [2018-06-13 14:54:39] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:54:39] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:54:39] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 14:54:39] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 14:54:39] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 14:54:39] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 14:54:39] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 14:54:39] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1614 ms
demo-api : [2018-06-13 14:54:41] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 14:54:41] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 14:54:41] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 14:54:41] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 14:54:41] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 14:54:41] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 14:54:41] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 14:54:41] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 14:54:41 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e
demo-api : [2018-06-13 14:54:41] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:54:42] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 14:54:42] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 14:54:42] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 14:54:42] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 14:54:42] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:54:42] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e: startup date [Wed Jun 13 14:54:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@a3d8174
demo-api : [2018-06-13 14:54:42] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 14:54:42] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 14:54:42] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 14:54:42] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:54:42] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:54:42] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 14:54:42] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e: startup date [Wed Jun 13 14:54:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@a3d8174
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 14:54:43] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6d23017e,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 14:54:43] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 14:54:43] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528872884660 with initial instances count: 0
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528872884667, current=UP, previous=STARTING]
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:54:44] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8080]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8080]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 14:54:44] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Failed to deregister MBean named [Tomcat:type=ProtocolHandler,port=8080] from MBean server [com.sun.jmx.mbeanserver.JmxMBeanServer@6f94fa3e]
demo-api : [2018-06-13 14:54:44] [WARN ]
				[org.apache.catalina.util.LifecycleMBeanBase:182]-- Failed to unregister MBean with name [Tomcat:type=Connector,port=8080] during component destruction
javax.management.InstanceNotFoundException: Tomcat:type=Connector,port=8080
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)
	at org.apache.catalina.util.LifecycleMBeanBase.unregister(LifecycleMBeanBase.java:197)
	at org.apache.catalina.util.LifecycleMBeanBase.destroyInternal(LifecycleMBeanBase.java:73)
	at org.apache.catalina.connector.Connector.destroyInternal(Connector.java:1058)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardService.destroyInternal(StandardService.java:571)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardServer.destroyInternal(StandardServer.java:883)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.startup.Tomcat.destroy(Tomcat.java:389)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stop(TomcatWebServer.java:302)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.stopAndReleaseWebServer(ServletWebServerApplicationContext.java:309)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 14:54:44] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.

demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e: startup date [Wed Jun 13 14:54:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@a3d8174
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 14:54:44] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528872884963, current=DOWN, previous=UP]
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 14:54:44] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 14:54:41 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e
demo-api : [2018-06-13 14:54:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 14:54:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 14:54:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - deregister  status: 200
demo-api : [2018-06-13 14:54:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 14:56:04] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@140c9f39: startup date [Wed Jun 13 14:56:04 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 14:56:04] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:56:04] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$10297ebe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:56:05] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 14:56:07] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 14:56:07] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 14:56:07] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 14:56:07] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ff684e1: startup date [Wed Jun 13 14:56:07 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@140c9f39
demo-api : [2018-06-13 14:56:08] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 14:56:08] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 14:56:08] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 14:56:08] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 14:56:08] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=02bf4474-b472-31a8-826b-e4bc691e5fd8
demo-api : [2018-06-13 14:56:08] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 14:56:08] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$ba7b39ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$c7c18d44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$5f0136f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$10297ebe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https) 8080 (http)
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 14:56:09] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1656 ms
demo-api : [2018-06-13 14:56:11] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 14:56:11] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 14:56:11] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 14:56:11] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 14:56:11] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 14:56:11] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 14:56:11] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 14:56:11] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 14:56:11 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ff684e1
demo-api : [2018-06-13 14:56:11] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:56:12] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 14:56:12] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 14:56:12] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 14:56:12] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ff684e1: startup date [Wed Jun 13 14:56:07 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@140c9f39
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ff684e1: startup date [Wed Jun 13 14:56:07 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@140c9f39
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 14:56:12] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 14:56:13] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=ff684e1,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 14:56:13] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 14:56:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 14:56:13] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 14:56:13] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528872974470 with initial instances count: 0
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528872974477, current=UP, previous=STARTING]
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:56:14] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8080]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8080]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 14:56:14] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Failed to deregister MBean named [Tomcat:type=ProtocolHandler,port=8080] from MBean server [com.sun.jmx.mbeanserver.JmxMBeanServer@6f94fa3e]
demo-api : [2018-06-13 14:56:14] [WARN ]
				[org.apache.catalina.util.LifecycleMBeanBase:182]-- Failed to unregister MBean with name [Tomcat:type=Connector,port=8080] during component destruction
javax.management.InstanceNotFoundException: Tomcat:type=Connector,port=8080
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)
	at org.apache.catalina.util.LifecycleMBeanBase.unregister(LifecycleMBeanBase.java:197)
	at org.apache.catalina.util.LifecycleMBeanBase.destroyInternal(LifecycleMBeanBase.java:73)
	at org.apache.catalina.connector.Connector.destroyInternal(Connector.java:1058)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardService.destroyInternal(StandardService.java:571)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardServer.destroyInternal(StandardServer.java:883)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.startup.Tomcat.destroy(Tomcat.java:389)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stop(TomcatWebServer.java:302)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.stopAndReleaseWebServer(ServletWebServerApplicationContext.java:309)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 14:56:14] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.

demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ff684e1: startup date [Wed Jun 13 14:56:07 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@140c9f39
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 14:56:14] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528872974685, current=DOWN, previous=UP]
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 14:56:14] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 14:56:11 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ff684e1
demo-api : [2018-06-13 14:56:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 14:56:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 14:56:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - deregister  status: 200
demo-api : [2018-06-13 14:56:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 14:59:57] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@62230c58: startup date [Wed Jun 13 14:59:57 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 14:59:57] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 14:59:57] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$22a79e07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 14:59:58] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:00:00] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:00:00] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:00:00] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:00:00] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@663411de: startup date [Wed Jun 13 15:00:00 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@62230c58
demo-api : [2018-06-13 15:00:00] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:00:01] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:00:01] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:00:01] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:00:01] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=19a4bfb4-a293-3bfa-963e-135777cbaaab
demo-api : [2018-06-13 15:00:01] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:00:01] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:00:01] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:00:01] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$ccf95938] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:00:01] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$da3fac8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:00:01] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$717f5639] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:00:01] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$22a79e07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:00:01] [WARN ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:558]-- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Could not load key store: class path resource [keystore.p12] cannot be resolved to URL because it does not exist
demo-api : [2018-06-13 15:00:01] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 15:00:01] [ERROR]
				[org.springframework.boot.SpringApplication:842]-- Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Could not load key store: class path resource [keystore.p12] cannot be resolved to URL because it does not exist
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:155)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.springframework.boot.web.server.WebServerException: Could not load key store: class path resource [keystore.p12] cannot be resolved to URL because it does not exist
	at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:124)
	at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSsl(SslConnectorCustomizer.java:92)
	at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.customize(SslConnectorCustomizer.java:58)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeSsl(TomcatServletWebServerFactory.java:317)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.customizeConnector(TomcatServletWebServerFactory.java:300)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:166)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:179)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:152)
	... 8 common frames omitted
Caused by: java.io.FileNotFoundException: class path resource [keystore.p12] cannot be resolved to URL because it does not exist
	at org.springframework.util.ResourceUtils.getURL(ResourceUtils.java:137)
	at org.springframework.boot.web.embedded.tomcat.SslConnectorCustomizer.configureSslKeyStore(SslConnectorCustomizer.java:121)
	... 15 common frames omitted
demo-api : [2018-06-13 15:00:16] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ba9117e: startup date [Wed Jun 13 15:00:16 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:00:16] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:00:16] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb1ea16e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:00:17] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:00:20] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:00:20] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:00:20] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:00:20] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e: startup date [Wed Jun 13 15:00:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ba9117e
demo-api : [2018-06-13 15:00:20] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:00:20] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:00:20] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:00:20] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=19a4bfb4-a293-3bfa-963e-135777cbaaab
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$a5705c9f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$b2b6aff4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$49f659a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb1ea16e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (http) 8443 (https)
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:00:21] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to initialize connector [Connector[HTTP/1.1-8443]]
org.apache.catalina.LifecycleException: Failed to initialize component [Connector[HTTP/1.1-8443]]
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:112)
	at org.apache.catalina.core.StandardService.initInternal(StandardService.java:549)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	at org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:875)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:140)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:409)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:179)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:152)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler initialization failed
	at org.apache.catalina.connector.Connector.initInternal(Connector.java:995)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	... 20 common frames omitted
Caused by: java.lang.IllegalArgumentException: the trustAnchors parameter must be non-empty
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:116)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.initialiseSsl(AbstractJsseEndpoint.java:87)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:225)
	at org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:1086)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.init(AbstractJsseEndpoint.java:268)
	at org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:581)
	at org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:68)
	at org.apache.catalina.connector.Connector.initInternal(Connector.java:993)
	... 21 common frames omitted
Caused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty
	at java.security.cert.PKIXParameters.setTrustAnchors(PKIXParameters.java:200)
	at java.security.cert.PKIXParameters.<init>(PKIXParameters.java:157)
	at java.security.cert.PKIXBuilderParameters.<init>(PKIXBuilderParameters.java:130)
	at org.apache.tomcat.util.net.jsse.JSSEUtil.getParameters(JSSEUtil.java:389)
	at org.apache.tomcat.util.net.jsse.JSSEUtil.getTrustManagers(JSSEUtil.java:313)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:114)
	... 28 common frames omitted
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:00:21] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:00:22] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:00:22] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1939 ms
demo-api : [2018-06-13 15:00:23] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:00:23] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:00:23] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:00:23] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:00:23] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:00:23] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:00:23] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:00:23] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:00:23 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e
demo-api : [2018-06-13 15:00:23] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:00:24] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:00:24] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:00:24] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:00:24] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:00:24] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:00:24] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e: startup date [Wed Jun 13 15:00:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ba9117e
demo-api : [2018-06-13 15:00:24] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:00:24] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:00:24] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:00:24] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:00:24] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:00:24] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e: startup date [Wed Jun 13 15:00:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ba9117e
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:00:25] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6d23017e,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:00:25] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528873226533 with initial instances count: 0
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528873226540, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:00:26] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8443]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8443]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 15:00:26] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 15:00:26] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8443 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8443, or configure this application to listen on another port.

demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e: startup date [Wed Jun 13 15:00:20 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ba9117e
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:00:26] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528873226912, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:00:26] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:00:23 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e
demo-api : [2018-06-13 15:00:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:00:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 15:00:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - deregister  status: 200
demo-api : [2018-06-13 15:00:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 15:09:37] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@34f7cfd9: startup date [Wed Jun 13 15:09:37 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:09:37] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:09:37] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cc86f0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:09:38] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:09:40] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:09:40] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:09:40] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:09:40] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@363042d7: startup date [Wed Jun 13 15:09:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@34f7cfd9
demo-api : [2018-06-13 15:09:40] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=19a4bfb4-a293-3bfa-963e-135777cbaaab
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$b71a2a3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$c4607d93] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$5ba0273f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cc86f0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (http) 8443 (https)
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:09:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:09:42] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to initialize connector [Connector[HTTP/1.1-8443]]
org.apache.catalina.LifecycleException: Failed to initialize component [Connector[HTTP/1.1-8443]]
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:112)
	at org.apache.catalina.core.StandardService.initInternal(StandardService.java:549)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	at org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:875)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:140)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:409)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:179)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:152)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler initialization failed
	at org.apache.catalina.connector.Connector.initInternal(Connector.java:995)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	... 20 common frames omitted
Caused by: java.lang.IllegalArgumentException: Invalid keystore format
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:116)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.initialiseSsl(AbstractJsseEndpoint.java:87)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:225)
	at org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:1086)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.init(AbstractJsseEndpoint.java:268)
	at org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:581)
	at org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:68)
	at org.apache.catalina.connector.Connector.initInternal(Connector.java:993)
	... 21 common frames omitted
Caused by: java.io.IOException: Invalid keystore format
	at sun.security.provider.JavaKeyStore.engineLoad(JavaKeyStore.java:658)
	at sun.security.provider.JavaKeyStore$JKS.engineLoad(JavaKeyStore.java:56)
	at sun.security.provider.KeyStoreDelegator.engineLoad(KeyStoreDelegator.java:224)
	at sun.security.provider.JavaKeyStore$DualFormatJKS.engineLoad(JavaKeyStore.java:70)
	at java.security.KeyStore.load(KeyStore.java:1445)
	at org.apache.tomcat.util.net.SSLUtilBase.getStore(SSLUtilBase.java:139)
	at org.apache.tomcat.util.net.SSLHostConfig.getTruststore(SSLHostConfig.java:714)
	at org.apache.tomcat.util.net.jsse.JSSEUtil.getTrustManagers(JSSEUtil.java:304)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:114)
	... 28 common frames omitted
demo-api : [2018-06-13 15:09:42] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:09:42] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:09:42] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:09:42] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:09:42] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 2030 ms
demo-api : [2018-06-13 15:09:44] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:09:44] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:09:44] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:09:44] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:09:44] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:09:44] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:09:44] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:09:44] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:09:44 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@363042d7
demo-api : [2018-06-13 15:09:44] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:09:44] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:09:44] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:09:44] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:09:44] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:09:44] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@363042d7: startup date [Wed Jun 13 15:09:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@34f7cfd9
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@363042d7: startup date [Wed Jun 13 15:09:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@34f7cfd9
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:09:45] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:09:45] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=363042d7,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528873786944 with initial instances count: 0
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528873786950, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:09:46] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:09:46] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:09:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:09:47] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8443]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8443]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 15:09:47] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 15:09:47] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8443 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8443, or configure this application to listen on another port.

demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@363042d7: startup date [Wed Jun 13 15:09:40 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@34f7cfd9
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:09:47] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528873787379, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:09:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:09:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:09:47] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:09:44 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@363042d7
demo-api : [2018-06-13 15:09:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:09:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 15:09:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - deregister  status: 200
demo-api : [2018-06-13 15:09:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 15:14:14] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@65f095f8: startup date [Wed Jun 13 15:14:14 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:14:14] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:14:14] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a6a4b014] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:14:14] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:14:17] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:14:17] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:14:17] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:14:17] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@366ac49b: startup date [Wed Jun 13 15:14:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@65f095f8
demo-api : [2018-06-13 15:14:17] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=19a4bfb4-a293-3bfa-963e-135777cbaaab
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$50f66b45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$5e3cbe9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$f57c6846] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a6a4b014] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (http) 8443 (https)
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:14:18] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:14:19] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to initialize connector [Connector[HTTP/1.1-8443]]
org.apache.catalina.LifecycleException: Failed to initialize component [Connector[HTTP/1.1-8443]]
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:112)
	at org.apache.catalina.core.StandardService.initInternal(StandardService.java:549)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	at org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:875)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:140)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:409)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:179)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:152)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler initialization failed
	at org.apache.catalina.connector.Connector.initInternal(Connector.java:995)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	... 20 common frames omitted
Caused by: java.lang.IllegalArgumentException: Alias name [ENHINCK1] does not identify a key entry
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:116)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.initialiseSsl(AbstractJsseEndpoint.java:87)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:225)
	at org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:1086)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.init(AbstractJsseEndpoint.java:268)
	at org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:581)
	at org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:68)
	at org.apache.catalina.connector.Connector.initInternal(Connector.java:993)
	... 21 common frames omitted
Caused by: java.io.IOException: Alias name [ENHINCK1] does not identify a key entry
	at org.apache.tomcat.util.net.jsse.JSSEUtil.getKeyManagers(JSSEUtil.java:229)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:114)
	... 28 common frames omitted
demo-api : [2018-06-13 15:14:19] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:14:19] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:14:19] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:14:19] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:14:19] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1972 ms
demo-api : [2018-06-13 15:14:21] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:14:21] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:14:21] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:14:21] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:14:21] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:14:21] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:14:21] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:14:21] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:14:21 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@366ac49b
demo-api : [2018-06-13 15:14:21] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:14:21] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:14:21] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:14:21] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:14:21] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:14:21] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@366ac49b: startup date [Wed Jun 13 15:14:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@65f095f8
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@366ac49b: startup date [Wed Jun 13 15:14:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@65f095f8
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:14:22] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:14:23] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=366ac49b,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:14:23] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:14:23] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:14:24] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:14:24] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:14:24] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:14:24] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528874064091 with initial instances count: 0
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:14:24] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528874064099, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:14:24] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:14:24] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:14:24] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8443]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8443]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 15:14:24] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 15:14:24] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8443 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8443, or configure this application to listen on another port.

demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@366ac49b: startup date [Wed Jun 13 15:14:17 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@65f095f8
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:14:24] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528874064550, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:14:24] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:14:24] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:14:24] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:14:21 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@366ac49b
demo-api : [2018-06-13 15:14:24] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:14:31] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6afff2: startup date [Wed Jun 13 15:14:31 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:14:31] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:14:31] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$282eda35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:14:32] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:14:34] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:14:34] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:14:34] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:14:34] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fe1ce85: startup date [Wed Jun 13 15:14:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6afff2
demo-api : [2018-06-13 15:14:35] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:14:35] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:14:35] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:14:35] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:14:35] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=19a4bfb4-a293-3bfa-963e-135777cbaaab
demo-api : [2018-06-13 15:14:35] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:14:35] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$d2809566] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$dfc6e8bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$77069267] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$282eda35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (http) 8443 (https)
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:14:36] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to initialize connector [Connector[HTTP/1.1-8443]]
org.apache.catalina.LifecycleException: Failed to initialize component [Connector[HTTP/1.1-8443]]
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:112)
	at org.apache.catalina.core.StandardService.initInternal(StandardService.java:549)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	at org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:875)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:140)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:409)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:179)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:152)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler initialization failed
	at org.apache.catalina.connector.Connector.initInternal(Connector.java:995)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	... 20 common frames omitted
Caused by: java.lang.IllegalArgumentException: Invalid keystore format
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:116)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.initialiseSsl(AbstractJsseEndpoint.java:87)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:225)
	at org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:1086)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.init(AbstractJsseEndpoint.java:268)
	at org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:581)
	at org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:68)
	at org.apache.catalina.connector.Connector.initInternal(Connector.java:993)
	... 21 common frames omitted
Caused by: java.io.IOException: Invalid keystore format
	at sun.security.provider.JavaKeyStore.engineLoad(JavaKeyStore.java:658)
	at sun.security.provider.JavaKeyStore$JKS.engineLoad(JavaKeyStore.java:56)
	at sun.security.provider.KeyStoreDelegator.engineLoad(KeyStoreDelegator.java:224)
	at sun.security.provider.JavaKeyStore$DualFormatJKS.engineLoad(JavaKeyStore.java:70)
	at java.security.KeyStore.load(KeyStore.java:1445)
	at org.apache.tomcat.util.net.SSLUtilBase.getStore(SSLUtilBase.java:139)
	at org.apache.tomcat.util.net.SSLHostConfig.getTruststore(SSLHostConfig.java:714)
	at org.apache.tomcat.util.net.jsse.JSSEUtil.getTrustManagers(JSSEUtil.java:304)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:114)
	... 28 common frames omitted
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:14:36] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1973 ms
demo-api : [2018-06-13 15:14:38] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:14:38] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:14:38] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:14:38] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:14:38] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:14:38] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:14:38] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:14:38] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:14:38 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fe1ce85
demo-api : [2018-06-13 15:14:38] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:14:39] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:14:39] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:14:39] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:14:39] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:14:39] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:14:39] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fe1ce85: startup date [Wed Jun 13 15:14:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6afff2
demo-api : [2018-06-13 15:14:39] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:14:39] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:14:39] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:14:39] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:14:39] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:14:39] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fe1ce85: startup date [Wed Jun 13 15:14:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6afff2
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:14:40] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5fe1ce85,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:14:40] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:14:40] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528874081523 with initial instances count: 1
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528874081529, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:14:41] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8443]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8443]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 15:14:41] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 15:14:41] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8443 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8443, or configure this application to listen on another port.

demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fe1ce85: startup date [Wed Jun 13 15:14:34 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6a6afff2
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:14:41] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528874081954, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:14:41] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:14:38 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5fe1ce85
demo-api : [2018-06-13 15:14:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:14:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 15:14:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - deregister  status: 200
demo-api : [2018-06-13 15:14:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 15:15:28] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@53976f5c: startup date [Wed Jun 13 15:15:28 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:15:28] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:15:28] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a5b3e7ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:15:29] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:15:31] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:15:31] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:15:31] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:15:31] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74960bfa: startup date [Wed Jun 13 15:15:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@53976f5c
demo-api : [2018-06-13 15:15:31] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:15:31] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:15:31] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:15:31] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=02bf4474-b472-31a8-826b-e4bc691e5fd8
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$5005a2ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$5d4bf654] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$f48ba000] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a5b3e7ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (http) 8080 (http)
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:15:32] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1699 ms
demo-api : [2018-06-13 15:15:34] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:15:34] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:15:34] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:15:34] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:15:34] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:15:34] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:15:34] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:15:34] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:15:34 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74960bfa
demo-api : [2018-06-13 15:15:34] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:15:35] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:15:35] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:15:35] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:15:35] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:15:35] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:15:35] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74960bfa: startup date [Wed Jun 13 15:15:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@53976f5c
demo-api : [2018-06-13 15:15:35] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:15:35] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:15:35] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:15:35] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:15:35] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:15:35] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74960bfa: startup date [Wed Jun 13 15:15:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@53976f5c
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:15:36] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=74960bfa,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:15:36] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:15:36] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528874137692 with initial instances count: 0
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528874137699, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:15:37] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8080]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8080]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 15:15:37] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Failed to deregister MBean named [Tomcat:type=ProtocolHandler,port=8080] from MBean server [com.sun.jmx.mbeanserver.JmxMBeanServer@6f94fa3e]
demo-api : [2018-06-13 15:15:37] [WARN ]
				[org.apache.catalina.util.LifecycleMBeanBase:182]-- Failed to unregister MBean with name [Tomcat:type=Connector,port=8080] during component destruction
javax.management.InstanceNotFoundException: Tomcat:type=Connector,port=8080
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)
	at org.apache.catalina.util.LifecycleMBeanBase.unregister(LifecycleMBeanBase.java:197)
	at org.apache.catalina.util.LifecycleMBeanBase.destroyInternal(LifecycleMBeanBase.java:73)
	at org.apache.catalina.connector.Connector.destroyInternal(Connector.java:1058)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardService.destroyInternal(StandardService.java:571)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardServer.destroyInternal(StandardServer.java:883)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.startup.Tomcat.destroy(Tomcat.java:389)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stop(TomcatWebServer.java:302)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.stopAndReleaseWebServer(ServletWebServerApplicationContext.java:309)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 15:15:37] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.

demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74960bfa: startup date [Wed Jun 13 15:15:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@53976f5c
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:15:37] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528874137941, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:15:37] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:15:34 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74960bfa
demo-api : [2018-06-13 15:15:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:15:40] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 15:15:40] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - deregister  status: 200
demo-api : [2018-06-13 15:15:40] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 15:16:17] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@747edf66: startup date [Wed Jun 13 15:16:17 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:16:17] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:16:17] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a84cc90f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:16:18] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:16:21] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:16:21] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:16:21] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:16:21] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44b3606b: startup date [Wed Jun 13 15:16:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@747edf66
demo-api : [2018-06-13 15:16:21] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:16:21] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:16:21] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:16:21] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=19a4bfb4-a293-3bfa-963e-135777cbaaab
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$529e8440] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$5fe4d795] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$f7248141] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a84cc90f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (http) 8080 (http)
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:16:22] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1691 ms
demo-api : [2018-06-13 15:16:24] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:16:24] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:16:24] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:16:24] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:16:24] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:16:24] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:16:24] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:16:24] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:16:24 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44b3606b
demo-api : [2018-06-13 15:16:24] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:16:25] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:16:25] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:16:25] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:16:25] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:16:25] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:16:25] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44b3606b: startup date [Wed Jun 13 15:16:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@747edf66
demo-api : [2018-06-13 15:16:25] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:16:25] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:16:25] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:16:25] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:16:25] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:16:25] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44b3606b: startup date [Wed Jun 13 15:16:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@747edf66
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:16:26] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=44b3606b,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:16:26] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:16:26] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528874187668 with initial instances count: 0
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528874187676, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:16:27] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8080]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8080]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 15:16:27] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Failed to deregister MBean named [Tomcat:type=ProtocolHandler,port=8080] from MBean server [com.sun.jmx.mbeanserver.JmxMBeanServer@6f94fa3e]
demo-api : [2018-06-13 15:16:27] [WARN ]
				[org.apache.catalina.util.LifecycleMBeanBase:182]-- Failed to unregister MBean with name [Tomcat:type=Connector,port=8080] during component destruction
javax.management.InstanceNotFoundException: Tomcat:type=Connector,port=8080
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)
	at org.apache.catalina.util.LifecycleMBeanBase.unregister(LifecycleMBeanBase.java:197)
	at org.apache.catalina.util.LifecycleMBeanBase.destroyInternal(LifecycleMBeanBase.java:73)
	at org.apache.catalina.connector.Connector.destroyInternal(Connector.java:1058)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardService.destroyInternal(StandardService.java:571)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardServer.destroyInternal(StandardServer.java:883)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.startup.Tomcat.destroy(Tomcat.java:389)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stop(TomcatWebServer.java:302)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.stopAndReleaseWebServer(ServletWebServerApplicationContext.java:309)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 15:16:27] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.

demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44b3606b: startup date [Wed Jun 13 15:16:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@747edf66
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:16:27] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528874187866, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:16:27] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:16:24 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44b3606b
demo-api : [2018-06-13 15:16:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:16:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 15:16:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - deregister  status: 200
demo-api : [2018-06-13 15:16:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 15:19:26] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2e222612: startup date [Wed Jun 13 15:19:26 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:19:26] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:19:26] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e47b4863] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:19:27] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:19:29] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:19:29] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:19:29] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:19:29] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@77b14724: startup date [Wed Jun 13 15:19:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2e222612
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=19a4bfb4-a293-3bfa-963e-135777cbaaab
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$8ecd0394] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$9c1356e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$33530095] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e47b4863] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8081 (http) 8081 (http)
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:19:30] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:19:31] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:19:31] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1624 ms
demo-api : [2018-06-13 15:19:32] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:19:32] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:19:32] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:19:32] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:19:32] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:19:32] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:19:32] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:19:32] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:19:32 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@77b14724
demo-api : [2018-06-13 15:19:32] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:19:33] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:19:33] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:19:33] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:19:33] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:19:33] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:19:33] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@77b14724: startup date [Wed Jun 13 15:19:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2e222612
demo-api : [2018-06-13 15:19:33] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:19:33] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:19:33] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:19:33] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:19:33] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:19:33] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@77b14724: startup date [Wed Jun 13 15:19:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2e222612
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:19:34] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=77b14724,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:19:34] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528874375800 with initial instances count: 0
demo-api : [2018-06-13 15:19:35] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528874375807, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081: registering service...
demo-api : [2018-06-13 15:19:35] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:19:35] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:19:35] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:19:35] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:19:35] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:19:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:19:35] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 15:19:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:19:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081 - registration status: 204
demo-api : [2018-06-13 15:19:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:19:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 15:19:36] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Failed to deregister MBean named [Tomcat:type=ProtocolHandler,port=8081] from MBean server [com.sun.jmx.mbeanserver.JmxMBeanServer@6f94fa3e]
demo-api : [2018-06-13 15:19:36] [WARN ]
				[org.apache.catalina.util.LifecycleMBeanBase:182]-- Failed to unregister MBean with name [Tomcat:type=Connector,port=8081] during component destruction
javax.management.InstanceNotFoundException: Tomcat:type=Connector,port=8081
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)
	at org.apache.catalina.util.LifecycleMBeanBase.unregister(LifecycleMBeanBase.java:197)
	at org.apache.catalina.util.LifecycleMBeanBase.destroyInternal(LifecycleMBeanBase.java:73)
	at org.apache.catalina.connector.Connector.destroyInternal(Connector.java:1058)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardService.destroyInternal(StandardService.java:571)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardServer.destroyInternal(StandardServer.java:883)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.startup.Tomcat.destroy(Tomcat.java:389)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stop(TomcatWebServer.java:302)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.stopAndReleaseWebServer(ServletWebServerApplicationContext.java:309)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 15:19:36] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@77b14724: startup date [Wed Jun 13 15:19:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2e222612
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:19:36] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528874376047, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:19:36] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081: registering service...
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:19:36] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081 - registration status: 204
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:19:36] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:19:32 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@77b14724
demo-api : [2018-06-13 15:19:36] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:19:39] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 15:19:39] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081 - deregister  status: 200
demo-api : [2018-06-13 15:19:39] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 15:20:07] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@61386958: startup date [Wed Jun 13 15:20:07 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:20:07] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:20:07] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d99666eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:20:07] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:20:11] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:20:11] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:20:11] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:20:11] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d9b7a8a: startup date [Wed Jun 13 15:20:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@61386958
demo-api : [2018-06-13 15:20:11] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:20:11] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:20:11] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:20:11] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=19a4bfb4-a293-3bfa-963e-135777cbaaab
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$83e8221c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$912e7571] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$286e1f1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d99666eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8081 (http) 8083 (http)
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8083"]
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:20:12] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1622 ms
demo-api : [2018-06-13 15:20:14] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:20:14] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:20:14] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:20:14] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:20:14] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:20:14] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:20:14] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:20:14] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:20:14 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d9b7a8a
demo-api : [2018-06-13 15:20:14] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:20:15] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:20:15] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:20:15] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:20:15] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:20:15] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:20:15] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d9b7a8a: startup date [Wed Jun 13 15:20:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@61386958
demo-api : [2018-06-13 15:20:15] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:20:15] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:20:15] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:20:15] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:20:15] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:20:15] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d9b7a8a: startup date [Wed Jun 13 15:20:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@61386958
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:20:16] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5d9b7a8a,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:20:16] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:20:16] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528874417535 with initial instances count: 0
demo-api : [2018-06-13 15:20:17] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528874417541, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081: registering service...
demo-api : [2018-06-13 15:20:17] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:20:17] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:20:17] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:20:17] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:20:17] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:20:17] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:20:17] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081 - registration status: 204
demo-api : [2018-06-13 15:20:17] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8083"]
demo-api : [2018-06-13 15:20:17] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:206]-- Tomcat started on port(s): 8081 (http) 8083 (http) with context path ''
demo-api : [2018-06-13 15:20:17] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:124]-- Updating port to 8081
demo-api : [2018-06-13 15:20:17] [INFO ]
				[com.enhinck.demo.DemoApiApplication:59]-- Started DemoApiApplication in 10.858 seconds (JVM running for 11.651)
demo-api : [2018-06-13 15:20:30] [INFO ]
				[org.apache.coyote.http11.Http11Processor:182]-- Error parsing HTTP request header
 Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in method name. HTTP method names must be tokens
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:426)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:687)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:20:30] [INFO ]
				[org.apache.coyote.http11.Http11Processor:182]-- Error parsing HTTP request header
 Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in method name. HTTP method names must be tokens
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:426)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:687)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:20:30] [INFO ]
				[org.apache.coyote.http11.Http11Processor:182]-- Error parsing HTTP request header
 Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in method name. HTTP method names must be tokens
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:426)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:687)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:20:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:20:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:20:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:20:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:20:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:20:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: false
demo-api : [2018-06-13 15:20:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:20:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:132]-- Application shutdown requested.
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d9b7a8a: startup date [Wed Jun 13 15:20:11 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@61386958
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:22:37] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528874557575, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:22:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081: registering service...
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:22:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081 - registration status: 204
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:22:37] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:20:14 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d9b7a8a
demo-api : [2018-06-13 15:22:37] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:22:42] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd2a21f: startup date [Wed Jun 13 15:22:42 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:22:42] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:22:42] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$45b8a780] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:22:42] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:22:45] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:22:45] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:22:45] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:22:45] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63dd899: startup date [Wed Jun 13 15:22:45 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd2a21f
demo-api : [2018-06-13 15:22:46] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:22:46] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:22:46] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:22:46] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:22:46] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=19a4bfb4-a293-3bfa-963e-135777cbaaab
demo-api : [2018-06-13 15:22:46] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:22:46] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:22:46] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:22:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$f00a62b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:22:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$fd50b606] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:22:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$94905fb2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:22:46] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$45b8a780] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:22:47] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8081 (https) 8080 (http)
demo-api : [2018-06-13 15:22:47] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8081"]
demo-api : [2018-06-13 15:22:47] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:22:47] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:22:47] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:22:47] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:22:47] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:22:47] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:22:47] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1644 ms
demo-api : [2018-06-13 15:22:49] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:22:49] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:22:49] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:22:49] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:22:49] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:22:49] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:22:49] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:22:49] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:22:49 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63dd899
demo-api : [2018-06-13 15:22:49] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:22:49] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:22:49] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:22:49] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:22:49] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:22:49] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:22:49] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63dd899: startup date [Wed Jun 13 15:22:45 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd2a21f
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63dd899: startup date [Wed Jun 13 15:22:45 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd2a21f
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:22:50] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:22:50] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=63dd899,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:22:51] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:22:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:22:51] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:22:51] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:22:51] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:22:51] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:22:51] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528874572164 with initial instances count: 1
demo-api : [2018-06-13 15:22:52] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528874572171, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081: registering service...
demo-api : [2018-06-13 15:22:52] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:22:52] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:22:52] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:22:52] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:22:52] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:22:52] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8081"]
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081 - registration status: 204
demo-api : [2018-06-13 15:22:52] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:22:52] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:22:52] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:206]-- Tomcat started on port(s): 8081 (https) 8080 (http) with context path ''
demo-api : [2018-06-13 15:22:52] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:124]-- Updating port to 8081
demo-api : [2018-06-13 15:22:52] [INFO ]
				[com.enhinck.demo.DemoApiApplication:59]-- Started DemoApiApplication in 10.671 seconds (JVM running for 11.475)
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:132]-- Application shutdown requested.
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63dd899: startup date [Wed Jun 13 15:22:45 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd2a21f
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:23:11] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528874591972, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:23:11] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081: registering service...
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:23:11] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081 - registration status: 204
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:23:11] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:22:49 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63dd899
demo-api : [2018-06-13 15:23:11] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:23:32] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3a6bb9bf: startup date [Wed Jun 13 15:23:32 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:23:32] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:23:32] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1605d8df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:23:33] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:23:35] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:23:35] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:23:35] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:23:35] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30b19518: startup date [Wed Jun 13 15:23:35 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3a6bb9bf
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=19a4bfb4-a293-3bfa-963e-135777cbaaab
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$c0579410] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$cd9de765] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$64dd9111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1605d8df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https) 8080 (http)
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:23:36] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:23:37] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:23:37] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1737 ms
demo-api : [2018-06-13 15:23:38] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:23:38] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:23:38] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:23:38] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:23:38] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:23:38] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:23:38] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:23:38] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:23:38 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30b19518
demo-api : [2018-06-13 15:23:38] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:23:39] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:23:39] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:23:39] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:23:39] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:23:39] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:23:39] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30b19518: startup date [Wed Jun 13 15:23:35 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3a6bb9bf
demo-api : [2018-06-13 15:23:39] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:23:39] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:23:39] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:23:39] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:23:39] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:23:39] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30b19518: startup date [Wed Jun 13 15:23:35 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3a6bb9bf
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:23:40] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:23:40] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=30b19518,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528874621890 with initial instances count: 1
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528874621898, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:23:41] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8080]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8080]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:23:41] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:23:41] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 15:23:42] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Failed to deregister MBean named [Tomcat:type=ProtocolHandler,port=8080] from MBean server [com.sun.jmx.mbeanserver.JmxMBeanServer@6f94fa3e]
demo-api : [2018-06-13 15:23:42] [WARN ]
				[org.apache.catalina.util.LifecycleMBeanBase:182]-- Failed to unregister MBean with name [Tomcat:type=Connector,port=8080] during component destruction
javax.management.InstanceNotFoundException: Tomcat:type=Connector,port=8080
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)
	at org.apache.catalina.util.LifecycleMBeanBase.unregister(LifecycleMBeanBase.java:197)
	at org.apache.catalina.util.LifecycleMBeanBase.destroyInternal(LifecycleMBeanBase.java:73)
	at org.apache.catalina.connector.Connector.destroyInternal(Connector.java:1058)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardService.destroyInternal(StandardService.java:571)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardServer.destroyInternal(StandardServer.java:883)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.startup.Tomcat.destroy(Tomcat.java:389)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stop(TomcatWebServer.java:302)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.stopAndReleaseWebServer(ServletWebServerApplicationContext.java:309)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 15:23:42] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.

demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30b19518: startup date [Wed Jun 13 15:23:35 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3a6bb9bf
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:23:42] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528874622139, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:23:42] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:23:42] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:23:42] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:23:38 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30b19518
demo-api : [2018-06-13 15:23:42] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:23:45] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 15:23:45] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - deregister  status: 200
demo-api : [2018-06-13 15:23:45] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 15:24:26] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@693fe6c9: startup date [Wed Jun 13 15:24:26 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:24:26] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:24:26] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$87ae0e40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:24:26] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:24:29] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:24:29] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:24:29] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:24:29] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a9d6f02: startup date [Wed Jun 13 15:24:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@693fe6c9
demo-api : [2018-06-13 15:24:29] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:24:29] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:24:29] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:24:29] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=02bf4474-b472-31a8-826b-e4bc691e5fd8
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$31ffc971] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$3f461cc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$d685c672] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$87ae0e40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https) 8080 (http)
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:24:30] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1674 ms
demo-api : [2018-06-13 15:24:32] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:24:32] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:24:32] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:24:32] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:24:32] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:24:32] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:24:32] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:24:32] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:24:32 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a9d6f02
demo-api : [2018-06-13 15:24:32] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:24:33] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:24:33] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:24:33] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:24:33] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a9d6f02: startup date [Wed Jun 13 15:24:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@693fe6c9
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a9d6f02: startup date [Wed Jun 13 15:24:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@693fe6c9
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:24:33] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:24:34] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5a9d6f02,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:24:34] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:24:34] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:24:34] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:24:34] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528874675453 with initial instances count: 1
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528874675461, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:24:35] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8080]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8080]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 15:24:35] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Failed to deregister MBean named [Tomcat:type=ProtocolHandler,port=8080] from MBean server [com.sun.jmx.mbeanserver.JmxMBeanServer@6f94fa3e]
demo-api : [2018-06-13 15:24:35] [WARN ]
				[org.apache.catalina.util.LifecycleMBeanBase:182]-- Failed to unregister MBean with name [Tomcat:type=Connector,port=8080] during component destruction
javax.management.InstanceNotFoundException: Tomcat:type=Connector,port=8080
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)
	at org.apache.catalina.util.LifecycleMBeanBase.unregister(LifecycleMBeanBase.java:197)
	at org.apache.catalina.util.LifecycleMBeanBase.destroyInternal(LifecycleMBeanBase.java:73)
	at org.apache.catalina.connector.Connector.destroyInternal(Connector.java:1058)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardService.destroyInternal(StandardService.java:571)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardServer.destroyInternal(StandardServer.java:883)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.startup.Tomcat.destroy(Tomcat.java:389)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stop(TomcatWebServer.java:302)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.stopAndReleaseWebServer(ServletWebServerApplicationContext.java:309)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 15:24:35] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.

demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a9d6f02: startup date [Wed Jun 13 15:24:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@693fe6c9
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:24:35] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528874675708, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:24:35] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:24:32 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a9d6f02
demo-api : [2018-06-13 15:24:35] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:24:38] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 15:24:38] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - deregister  status: 200
demo-api : [2018-06-13 15:24:38] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 15:25:04] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4d910fd6: startup date [Wed Jun 13 15:25:04 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:25:05] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:25:05] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4e3e09e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:25:05] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:25:08] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:25:08] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:25:08] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:25:08] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23aa363a: startup date [Wed Jun 13 15:25:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4d910fd6
demo-api : [2018-06-13 15:25:08] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:25:08] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:25:08] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:25:08] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=02bf4474-b472-31a8-826b-e4bc691e5fd8
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$f88fc511] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$5d61866] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$9d15c212] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$4e3e09e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8081 (https) 8081 (http)
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8081"]
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:25:09] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:25:10] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:25:10] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1753 ms
demo-api : [2018-06-13 15:25:11] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:25:11] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:25:11] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:25:11] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:25:11] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:25:11] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:25:11] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:25:11] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:25:11 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23aa363a
demo-api : [2018-06-13 15:25:11] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:25:12] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:25:12] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:25:12] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:25:12] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:25:12] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:25:12] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23aa363a: startup date [Wed Jun 13 15:25:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4d910fd6
demo-api : [2018-06-13 15:25:12] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:25:12] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:25:12] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:25:12] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:25:12] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:25:12] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23aa363a: startup date [Wed Jun 13 15:25:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4d910fd6
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:25:13] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:25:13] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=23aa363a,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528874714949 with initial instances count: 1
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528874714956, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081: registering service...
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8081"]
demo-api : [2018-06-13 15:25:14] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:25:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081 - registration status: 204
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8081"]
demo-api : [2018-06-13 15:25:14] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 15:25:15] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8081"]
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8081"]
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["http-nio-8081"]
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Failed to deregister MBean named [Tomcat:type=ProtocolHandler,port=8081] from MBean server [com.sun.jmx.mbeanserver.JmxMBeanServer@6f94fa3e]
demo-api : [2018-06-13 15:25:15] [WARN ]
				[org.apache.catalina.util.LifecycleMBeanBase:182]-- Failed to unregister MBean with name [Tomcat:type=Connector,port=8081] during component destruction
javax.management.InstanceNotFoundException: Tomcat:type=Connector,port=8081
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.exclusiveUnregisterMBean(DefaultMBeanServerInterceptor.java:427)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.unregisterMBean(DefaultMBeanServerInterceptor.java:415)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.unregisterMBean(JmxMBeanServer.java:546)
	at org.apache.catalina.util.LifecycleMBeanBase.unregister(LifecycleMBeanBase.java:197)
	at org.apache.catalina.util.LifecycleMBeanBase.destroyInternal(LifecycleMBeanBase.java:73)
	at org.apache.catalina.connector.Connector.destroyInternal(Connector.java:1058)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardService.destroyInternal(StandardService.java:571)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.core.StandardServer.destroyInternal(StandardServer.java:883)
	at org.apache.catalina.util.LifecycleBase.destroy(LifecycleBase.java:297)
	at org.apache.catalina.startup.Tomcat.destroy(Tomcat.java:389)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.stop(TomcatWebServer.java:302)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.stopAndReleaseWebServer(ServletWebServerApplicationContext.java:309)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 15:25:15] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23aa363a: startup date [Wed Jun 13 15:25:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4d910fd6
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:25:15] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528874715206, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:25:15] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081: registering service...
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:25:15] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081 - registration status: 204
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:25:15] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:25:11 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23aa363a
demo-api : [2018-06-13 15:25:15] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:25:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 15:25:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8081 - deregister  status: 200
demo-api : [2018-06-13 15:25:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 15:26:29] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@74455848: startup date [Wed Jun 13 15:26:29 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:26:29] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:26:29] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1bc82c1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:26:30] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:26:33] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:26:33] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:26:33] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:26:33] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75cd8043: startup date [Wed Jun 13 15:26:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@74455848
demo-api : [2018-06-13 15:26:35] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:26:35] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:26:35] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:26:35] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:26:35] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=19a4bfb4-a293-3bfa-963e-135777cbaaab
demo-api : [2018-06-13 15:26:35] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:26:35] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:26:36] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:26:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$c619e74c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:26:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$d3603aa1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:26:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$6a9fe44d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:26:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1bc82c1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:26:36] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https)
demo-api : [2018-06-13 15:26:36] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:26:36] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:26:36] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:26:36] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:26:36] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:26:36] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 2944 ms
demo-api : [2018-06-13 15:26:39] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:26:39] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:26:39] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:26:39] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:26:39] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:26:39] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:26:39] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:26:39] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:26:39 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75cd8043
demo-api : [2018-06-13 15:26:39] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:26:40] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:26:40] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:26:40] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:26:40] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:26:40] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:26:40] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75cd8043: startup date [Wed Jun 13 15:26:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@74455848
demo-api : [2018-06-13 15:26:40] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:26:40] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:26:40] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:26:40] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:26:40] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:26:40] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75cd8043: startup date [Wed Jun 13 15:26:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@74455848
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:26:41] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:26:42] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=75cd8043,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:26:42] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:26:42] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:26:43] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:26:43] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:26:43] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:26:43] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:26:43] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528874804249 with initial instances count: 0
demo-api : [2018-06-13 15:26:44] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528874804257, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:26:44] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:26:44] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:26:44] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:26:44] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:26:44] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:26:44] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:26:44] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:26:45] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:26:45] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:206]-- Tomcat started on port(s): 8080 (https) with context path ''
demo-api : [2018-06-13 15:26:45] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:124]-- Updating port to 8080
demo-api : [2018-06-13 15:26:45] [INFO ]
				[com.enhinck.demo.DemoApiApplication:59]-- Started DemoApiApplication in 16.193 seconds (JVM running for 17.008)
demo-api : [2018-06-13 15:27:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:27:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:27:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:27:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:27:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:27:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: false
demo-api : [2018-06-13 15:27:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:27:14] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:28:45] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring FrameworkServlet 'dispatcherServlet'
demo-api : [2018-06-13 15:28:45] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:494]-- FrameworkServlet 'dispatcherServlet': initialization started
demo-api : [2018-06-13 15:28:45] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:509]-- FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
demo-api : [2018-06-13 15:28:46] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：Hello Server!
demo-api : [2018-06-13 15:28:48] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:49] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:50] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:50] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:50] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:50] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:51] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:51] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:51] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:51] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:51] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:52] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:52] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:52] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:52] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:52] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:53] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:53] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:53] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:53] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:53] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:53] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:54] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:54] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:54] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:54] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:54] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:55] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:55] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:55] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:55] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:55] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:56] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:56] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:56] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:28:56] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:03] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：Hello Server!
demo-api : [2018-06-13 15:29:04] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:04] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:04] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:04] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:05] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:05] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:05] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:05] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:05] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:05] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:08] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:08] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:09] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:09] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:09] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:09] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:09] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:09] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:10] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:10] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:10] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:10] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:10] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:10] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:29:14] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 15:31:44] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:132]-- Application shutdown requested.
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75cd8043: startup date [Wed Jun 13 15:26:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@74455848
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 15:31:49] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528875109209, current=DOWN, previous=UP]
demo-api : [2018-06-13 15:31:49] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 15:31:49] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 15:31:49] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:26:39 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75cd8043
demo-api : [2018-06-13 15:31:49] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 15:32:01] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3246fb96: startup date [Wed Jun 13 15:32:01 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 15:32:01] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:32:01] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb939c2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:32:02] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 15:32:05] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 15:32:05] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 15:32:05] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 15:32:05] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cdc4c27: startup date [Wed Jun 13 15:32:05 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3246fb96
demo-api : [2018-06-13 15:32:06] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 15:32:06] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 15:32:06] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 15:32:06] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 15:32:06] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=60509481-db91-3aea-8db9-02d7decb03c3
demo-api : [2018-06-13 15:32:06] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 15:32:06] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 15:32:06] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:32:06] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$a5e5575f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:32:07] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$b32baab4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:32:07] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$4a6b5460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:32:07] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb939c2e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 15:32:07] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https)
demo-api : [2018-06-13 15:32:07] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:32:07] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 15:32:07] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 15:32:07] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 15:32:07] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 15:32:07] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 1853 ms
demo-api : [2018-06-13 15:32:09] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 15:32:09] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 15:32:09] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 15:32:09] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 15:32:09] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 15:32:09] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 15:32:09] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 15:32:09] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 15:32:09 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cdc4c27
demo-api : [2018-06-13 15:32:09] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:32:10] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 15:32:10] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
demo-api : [2018-06-13 15:32:10] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
demo-api : [2018-06-13 15:32:10] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
demo-api : [2018-06-13 15:32:10] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 15:32:10] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:32:10] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 15:32:10] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:32:10] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 15:32:10] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 15:32:10] [INFO ]
				[springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping:69]-- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
demo-api : [2018-06-13 15:32:10] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:32:10] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:32:10] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 15:32:10] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 15:32:10] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cdc4c27: startup date [Wed Jun 13 15:32:05 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3246fb96
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cdc4c27: startup date [Wed Jun 13 15:32:05 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3246fb96
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 15:32:11] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 15:32:11] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 15:32:12] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 15:32:12] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 15:32:12] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:32:12] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:32:12] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:32:12] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 15:32:12] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 15:32:12] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 15:32:12] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1cdc4c27,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 15:32:12] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 15:32:12] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 15:32:12] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 15:32:12] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 15:32:12] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:32:12] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 15:32:12] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 15:32:12] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 15:32:12] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528875133307 with initial instances count: 1
demo-api : [2018-06-13 15:32:13] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528875133313, current=UP, previous=STARTING]
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 15:32:13] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 15:32:13] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 15:32:13] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 15:32:13] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 15:32:13] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 15:32:13] [INFO ]
				[springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:147]-- Context refreshed
demo-api : [2018-06-13 15:32:13] [INFO ]
				[springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:150]-- Found 1 custom documentation plugin(s)
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 15:32:13] [INFO ]
				[springfox.documentation.spring.web.scanners.ApiListingReferenceScanner:41]-- Scanning for api listing references
demo-api : [2018-06-13 15:32:13] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 15:32:13] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 15:32:13] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:206]-- Tomcat started on port(s): 8080 (https) with context path ''
demo-api : [2018-06-13 15:32:13] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:124]-- Updating port to 8080
demo-api : [2018-06-13 15:32:13] [INFO ]
				[com.enhinck.demo.DemoApiApplication:59]-- Started DemoApiApplication in 12.615 seconds (JVM running for 13.395)
demo-api : [2018-06-13 15:32:20] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring FrameworkServlet 'dispatcherServlet'
demo-api : [2018-06-13 15:32:20] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:494]-- FrameworkServlet 'dispatcherServlet': initialization started
demo-api : [2018-06-13 15:32:20] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:509]-- FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
demo-api : [2018-06-13 15:32:35] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing SpringClientFactory-resource-server: startup date [Wed Jun 13 15:32:35 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cdc4c27
demo-api : [2018-06-13 15:32:35] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 15:32:35] [INFO ]
				[com.netflix.config.ChainedDynamicProperty:115]-- Flipping property: resource-server.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
demo-api : [2018-06-13 15:32:35] [INFO ]
				[com.netflix.util.concurrent.ShutdownEnabledTimer:58]-- Shutdown hook installed for: NFLoadBalancer-PingTimer-resource-server
demo-api : [2018-06-13 15:32:35] [INFO ]
				[com.netflix.loadbalancer.BaseLoadBalancer:192]-- Client: resource-server instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=resource-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
demo-api : [2018-06-13 15:32:35] [INFO ]
				[com.netflix.loadbalancer.DynamicServerListLoadBalancer:222]-- Using serverListUpdater PollingServerListUpdater
demo-api : [2018-06-13 15:32:35] [INFO ]
				[com.netflix.loadbalancer.DynamicServerListLoadBalancer:150]-- DynamicServerListLoadBalancer for client resource-server initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=resource-server,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7e0ea688
demo-api : [2018-06-13 15:32:36] [ERROR]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:182]-- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: resource-server] with root cause
com.netflix.client.ClientException: Load balancer does not have available server for client: resource-server
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103)
	at com.sun.proxy.$Proxy150.doDemo(Unknown Source)
	at com.enhinck.demo.api.DemoController.login(DemoController.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:613)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 15:37:13] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:42:13] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:47:13] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:52:13] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 15:57:13] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 16:02:13] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 16:07:13] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 16:12:13] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:132]-- Application shutdown requested.
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cdc4c27: startup date [Wed Jun 13 15:32:05 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3246fb96
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 16:12:25] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528877545092, current=DOWN, previous=UP]
demo-api : [2018-06-13 16:12:25] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 16:12:25] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing SpringClientFactory-resource-server: startup date [Wed Jun 13 15:32:35 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cdc4c27
demo-api : [2018-06-13 16:12:25] [INFO ]
				[com.netflix.util.concurrent.ShutdownEnabledTimer:67]-- Shutdown hook removed for: NFLoadBalancer-PingTimer-resource-server
demo-api : [2018-06-13 16:12:25] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 15:32:09 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cdc4c27
demo-api : [2018-06-13 16:12:25] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 16:12:32] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@41e1e210: startup date [Wed Jun 13 16:12:32 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 16:12:32] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:12:32] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8eb6758d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:12:33] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 16:12:35] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=a04dc234e5549003fb387424fcef99283499f03d, state=null
demo-api : [2018-06-13 16:12:35] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 16:12:35] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 16:12:35] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b619d14: startup date [Wed Jun 13 16:12:35 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@41e1e210
demo-api : [2018-06-13 16:12:36] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 16:12:36] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 16:12:36] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 16:12:36] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 16:12:36] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=21f72b50-05d2-3739-9858-8d53ca412f53
demo-api : [2018-06-13 16:12:36] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 16:12:36] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 16:12:36] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:12:36] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroLifecycleBeanPostProcessor' of type [com.enhinck.demo.config.ShiroLifecycleBeanPostProcessor$$EnhancerBySpringCGLIB$$959d3d0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:12:36] [WARN ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:558]-- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'shiro.session.expire' in value "${shiro.session.expire}"
demo-api : [2018-06-13 16:12:36] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 16:12:36] [ERROR]
				[org.springframework.boot.SpringApplication:842]-- Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig': Injection of autowired dependencies failed; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'shiro.session.expire' in value "${shiro.session.expire}"
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:379)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1344)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:501)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1250)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1099)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:501)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:226)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:710)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:535)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'shiro.session.expire' in value "${shiro.session.expire}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:172)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:237)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:211)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:175)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:839)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1086)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	... 26 common frames omitted
demo-api : [2018-06-13 16:14:33] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1ba9117e: startup date [Wed Jun 13 16:14:33 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 16:14:34] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:14:34] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb1ea16e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:34] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 16:14:41] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=db163010b3d76b843f49ff6667351114cadff511, state=null
demo-api : [2018-06-13 16:14:41] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 16:14:41] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 16:14:41] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e: startup date [Wed Jun 13 16:14:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ba9117e
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=21f72b50-05d2-3739-9858-8d53ca412f53
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroLifecycleBeanPostProcessor' of type [com.enhinck.demo.config.ShiroLifecycleBeanPostProcessor$$EnhancerBySpringCGLIB$$20568ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroConfig' of type [com.enhinck.demo.config.ShiroConfig$$EnhancerBySpringCGLIB$$26cafa39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'userRealm' of type [com.enhinck.demo.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'redisManager' of type [org.crazycake.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:42] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroAuthorizationFilter' of type [com.enhinck.demo.shiro.ShiroAuthorizationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:43] [INFO ]
				[com.enhinck.demo.config.ShiroConfig:144]-- shiroFilter init
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$a5705c9f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$b2b6aff4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$49f659a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb1ea16e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https)
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 16:14:43] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 2435 ms
demo-api : [2018-06-13 16:14:44] [INFO ]
				[com.enhinck.demo.config.RedisConfig:68]-- JedisConnectionFactory bean init success.
demo-api : [2018-06-13 16:14:45] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 16:14:45] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 16:14:45] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 16:14:45] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 16:14:45] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 16:14:45] [INFO ]
				[org.springframework.boot.web.servlet.RegistrationBean:50]-- Filter shiroAuthorizationFilter was not registered (disabled)
demo-api : [2018-06-13 16:14:45] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 16:14:45] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'shiroFilter' to: [/*]
demo-api : [2018-06-13 16:14:45] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 16:14:45] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 16:14:45 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e
demo-api : [2018-06-13 16:14:45] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:14:47] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 16:14:47] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
demo-api : [2018-06-13 16:14:47] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
demo-api : [2018-06-13 16:14:47] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
demo-api : [2018-06-13 16:14:47] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 16:14:47] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 16:14:47] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 16:14:47] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 16:14:47] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 16:14:47] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 16:14:47] [INFO ]
				[springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping:69]-- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
demo-api : [2018-06-13 16:14:47] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 16:14:47] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 16:14:47] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 16:14:47] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 16:14:48] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 16:14:48] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e: startup date [Wed Jun 13 16:14:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ba9117e
demo-api : [2018-06-13 16:14:48] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 16:14:48] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 16:14:48] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e: startup date [Wed Jun 13 16:14:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ba9117e
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 16:14:49] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6d23017e,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 16:14:49] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 16:14:50] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 16:14:50] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528877690747 with initial instances count: 1
demo-api : [2018-06-13 16:14:50] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528877690759, current=UP, previous=STARTING]
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 16:14:50] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 16:14:50] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 16:14:50] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 16:14:50] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 16:14:50] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 16:14:50] [INFO ]
				[springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:147]-- Context refreshed
demo-api : [2018-06-13 16:14:50] [INFO ]
				[springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:150]-- Found 1 custom documentation plugin(s)
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 16:14:50] [INFO ]
				[springfox.documentation.spring.web.scanners.ApiListingReferenceScanner:41]-- Scanning for api listing references
demo-api : [2018-06-13 16:14:50] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:14:50] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 16:14:50] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:206]-- Tomcat started on port(s): 8080 (https) with context path ''
demo-api : [2018-06-13 16:14:50] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:124]-- Updating port to 8080
demo-api : [2018-06-13 16:14:50] [INFO ]
				[com.enhinck.demo.DemoApiApplication:59]-- Started DemoApiApplication in 17.652 seconds (JVM running for 18.507)
demo-api : [2018-06-13 16:15:08] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring FrameworkServlet 'dispatcherServlet'
demo-api : [2018-06-13 16:15:08] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:494]-- FrameworkServlet 'dispatcherServlet': initialization started
demo-api : [2018-06-13 16:15:08] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:509]-- FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
demo-api : [2018-06-13 16:15:08] [INFO ]
				[org.apache.shiro.session.mgt.AbstractValidatingSessionManager:233]-- Enabling session validation scheduler...
demo-api : [2018-06-13 16:15:08] [WARN ]
				[org.apache.shiro.authc.AbstractAuthenticator:216]-- Authentication failed for token submission [com.enhinck.demo.shiro.ShiroExtToken@69195989].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.NullPointerException: null
	at org.apache.shiro.authc.credential.SimpleCredentialsMatcher.equals(SimpleCredentialsMatcher.java:109)
	at org.apache.shiro.authc.credential.SimpleCredentialsMatcher.doCredentialsMatch(SimpleCredentialsMatcher.java:129)
	at org.apache.shiro.realm.AuthenticatingRealm.assertCredentialsMatch(AuthenticatingRealm.java:600)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:581)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:274)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:260)
	at com.enhinck.demo.shiro.ShiroAuthorizationFilter.authentication(ShiroAuthorizationFilter.java:86)
	at com.enhinck.demo.shiro.ShiroAuthorizationFilter.preHandle(ShiroAuthorizationFilter.java:101)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:613)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 16:15:08] [ERROR]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:182]-- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.lang.NullPointerException: null
	at org.apache.shiro.authc.credential.SimpleCredentialsMatcher.equals(SimpleCredentialsMatcher.java:109)
	at org.apache.shiro.authc.credential.SimpleCredentialsMatcher.doCredentialsMatch(SimpleCredentialsMatcher.java:129)
	at org.apache.shiro.realm.AuthenticatingRealm.assertCredentialsMatch(AuthenticatingRealm.java:600)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:581)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:274)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:260)
	at com.enhinck.demo.shiro.ShiroAuthorizationFilter.authentication(ShiroAuthorizationFilter.java:86)
	at com.enhinck.demo.shiro.ShiroAuthorizationFilter.preHandle(ShiroAuthorizationFilter.java:101)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:613)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 16:15:08] [WARN ]
				[org.apache.shiro.authc.AbstractAuthenticator:216]-- Authentication failed for token submission [com.enhinck.demo.shiro.ShiroExtToken@4b019e54].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.NullPointerException: null
	at org.apache.shiro.authc.credential.SimpleCredentialsMatcher.equals(SimpleCredentialsMatcher.java:109)
	at org.apache.shiro.authc.credential.SimpleCredentialsMatcher.doCredentialsMatch(SimpleCredentialsMatcher.java:129)
	at org.apache.shiro.realm.AuthenticatingRealm.assertCredentialsMatch(AuthenticatingRealm.java:600)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:581)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:274)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:260)
	at com.enhinck.demo.shiro.ShiroAuthorizationFilter.authentication(ShiroAuthorizationFilter.java:86)
	at com.enhinck.demo.shiro.ShiroAuthorizationFilter.preHandle(ShiroAuthorizationFilter.java:101)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:613)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 16:15:08] [ERROR]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]:182]-- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Filtered request failed.] with root cause
java.lang.NullPointerException: null
	at org.apache.shiro.authc.credential.SimpleCredentialsMatcher.equals(SimpleCredentialsMatcher.java:109)
	at org.apache.shiro.authc.credential.SimpleCredentialsMatcher.doCredentialsMatch(SimpleCredentialsMatcher.java:129)
	at org.apache.shiro.realm.AuthenticatingRealm.assertCredentialsMatch(AuthenticatingRealm.java:600)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:581)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:274)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:260)
	at com.enhinck.demo.shiro.ShiroAuthorizationFilter.authentication(ShiroAuthorizationFilter.java:86)
	at com.enhinck.demo.shiro.ShiroAuthorizationFilter.preHandle(ShiroAuthorizationFilter.java:101)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:131)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:613)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:132]-- Application shutdown requested.
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e: startup date [Wed Jun 13 16:14:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1ba9117e
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 16:16:29] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528877789325, current=DOWN, previous=UP]
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 16:14:45 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d23017e
demo-api : [2018-06-13 16:16:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 16:16:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 16:16:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 16:16:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 16:16:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - deregister  status: 200
demo-api : [2018-06-13 16:16:29] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.apache.shiro.session.mgt.AbstractValidatingSessionManager:250]-- Disabled session validation scheduler.
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Destroying Spring FrameworkServlet 'dispatcherServlet'
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:16:29] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:16:35] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6d3a388c: startup date [Wed Jun 13 16:16:35 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 16:16:35] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:16:35] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$544fe5d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:36] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 16:16:38] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=db163010b3d76b843f49ff6667351114cadff511, state=null
demo-api : [2018-06-13 16:16:38] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 16:16:38] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 16:16:38] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42463763: startup date [Wed Jun 13 16:16:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d3a388c
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=21f72b50-05d2-3739-9858-8d53ca412f53
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroLifecycleBeanPostProcessor' of type [com.enhinck.demo.config.ShiroLifecycleBeanPostProcessor$$EnhancerBySpringCGLIB$$5b36ad51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroConfig' of type [com.enhinck.demo.config.ShiroConfig$$EnhancerBySpringCGLIB$$7ffc3e9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'userRealm' of type [com.enhinck.demo.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'redisManager' of type [org.crazycake.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroAuthorizationFilter' of type [com.enhinck.demo.shiro.ShiroAuthorizationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:40] [INFO ]
				[com.enhinck.demo.config.ShiroConfig:144]-- shiroFilter init
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$fea1a101] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$be7f456] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$a3279e02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$544fe5d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https)
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 16:16:40] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 2415 ms
demo-api : [2018-06-13 16:16:41] [INFO ]
				[com.enhinck.demo.config.RedisConfig:68]-- JedisConnectionFactory bean init success.
demo-api : [2018-06-13 16:16:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 16:16:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 16:16:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 16:16:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 16:16:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 16:16:43] [INFO ]
				[org.springframework.boot.web.servlet.RegistrationBean:50]-- Filter shiroAuthorizationFilter was not registered (disabled)
demo-api : [2018-06-13 16:16:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 16:16:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'shiroFilter' to: [/*]
demo-api : [2018-06-13 16:16:43] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 16:16:43] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 16:16:43 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42463763
demo-api : [2018-06-13 16:16:43] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:16:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 16:16:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
demo-api : [2018-06-13 16:16:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
demo-api : [2018-06-13 16:16:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
demo-api : [2018-06-13 16:16:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 16:16:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 16:16:44] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 16:16:44] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 16:16:44] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 16:16:44] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 16:16:45] [INFO ]
				[springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping:69]-- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
demo-api : [2018-06-13 16:16:45] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 16:16:45] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 16:16:45] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 16:16:45] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 16:16:45] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 16:16:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42463763: startup date [Wed Jun 13 16:16:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d3a388c
demo-api : [2018-06-13 16:16:45] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 16:16:45] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 16:16:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42463763: startup date [Wed Jun 13 16:16:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d3a388c
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 16:16:46] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 16:16:47] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 16:16:47] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 16:16:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 16:16:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:16:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:16:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:16:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:16:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 16:16:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 16:16:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=42463763,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 16:16:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 16:16:47] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 16:16:47] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 16:16:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 16:16:47] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 16:16:47] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 16:16:47] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 16:16:47] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528877808531 with initial instances count: 0
demo-api : [2018-06-13 16:16:48] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528877808545, current=UP, previous=STARTING]
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 16:16:48] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 16:16:48] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 16:16:48] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 16:16:48] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 16:16:48] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 16:16:48] [INFO ]
				[springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:147]-- Context refreshed
demo-api : [2018-06-13 16:16:48] [INFO ]
				[springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:150]-- Found 1 custom documentation plugin(s)
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 16:16:48] [INFO ]
				[springfox.documentation.spring.web.scanners.ApiListingReferenceScanner:41]-- Scanning for api listing references
demo-api : [2018-06-13 16:16:48] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:16:48] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 16:16:48] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:206]-- Tomcat started on port(s): 8080 (https) with context path ''
demo-api : [2018-06-13 16:16:48] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:124]-- Updating port to 8080
demo-api : [2018-06-13 16:16:48] [INFO ]
				[com.enhinck.demo.DemoApiApplication:59]-- Started DemoApiApplication in 13.937 seconds (JVM running for 14.748)
demo-api : [2018-06-13 16:16:52] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring FrameworkServlet 'dispatcherServlet'
demo-api : [2018-06-13 16:16:52] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:494]-- FrameworkServlet 'dispatcherServlet': initialization started
demo-api : [2018-06-13 16:16:52] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:509]-- FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
demo-api : [2018-06-13 16:16:52] [INFO ]
				[org.apache.shiro.session.mgt.AbstractValidatingSessionManager:233]-- Enabling session validation scheduler...
demo-api : [2018-06-13 16:16:53] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：Hello Server!
demo-api : [2018-06-13 16:16:55] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 16:16:55] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 16:16:56] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 16:16:56] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:49]-- 客户端发送消息：1111
demo-api : [2018-06-13 16:16:57] [INFO ]
				[com.enhinck.demo.websocket.MyWebSocket:43]-- 连接已关闭！
demo-api : [2018-06-13 16:17:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 16:17:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 16:17:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 16:17:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 16:17:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 16:17:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: false
demo-api : [2018-06-13 16:17:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 16:17:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 16:21:48] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 16:26:48] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 16:31:48] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:132]-- Application shutdown requested.
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42463763: startup date [Wed Jun 13 16:16:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6d3a388c
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 16:35:11] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528878911193, current=DOWN, previous=UP]
demo-api : [2018-06-13 16:35:11] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 16:35:11] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 16:35:11] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 16:16:43 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42463763
demo-api : [2018-06-13 16:35:11] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 16:35:17] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@693fe6c9: startup date [Wed Jun 13 16:35:17 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 16:35:17] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:35:17] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$87ae0e40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:18] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 16:35:21] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=db163010b3d76b843f49ff6667351114cadff511, state=null
demo-api : [2018-06-13 16:35:21] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 16:35:21] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 16:35:21] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a9d6f02: startup date [Wed Jun 13 16:35:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@693fe6c9
demo-api : [2018-06-13 16:35:22] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 16:35:22] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 16:35:22] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 16:35:22] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=e0253fcb-9c4f-32dd-a448-31c9073881a9
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroLifecycleBeanPostProcessor' of type [com.enhinck.demo.config.ShiroLifecycleBeanPostProcessor$$EnhancerBySpringCGLIB$$8e94d5c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroConfig' of type [com.enhinck.demo.config.ShiroConfig$$EnhancerBySpringCGLIB$$b35a670b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'userRealm' of type [com.enhinck.demo.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'redisManager' of type [org.crazycake.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroAuthorizationFilter' of type [com.enhinck.demo.shiro.ShiroAuthorizationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:23] [INFO ]
				[com.enhinck.demo.config.ShiroConfig:144]-- shiroFilter init
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$31ffc971] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$3f461cc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$d685c672] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:23] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$87ae0e40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:35:24] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https)
demo-api : [2018-06-13 16:35:24] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:35:24] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 16:35:24] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 16:35:24] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 16:35:24] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 16:35:24] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 2325 ms
demo-api : [2018-06-13 16:35:24] [INFO ]
				[com.enhinck.demo.config.RedisConfig:68]-- JedisConnectionFactory bean init success.
demo-api : [2018-06-13 16:35:26] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 16:35:26] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 16:35:26] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 16:35:26] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 16:35:26] [INFO ]
				[org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean:244]-- Mapping filter: 'springSecurityFilterChain' to: [/*]
demo-api : [2018-06-13 16:35:26] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 16:35:26] [INFO ]
				[org.springframework.boot.web.servlet.RegistrationBean:50]-- Filter shiroAuthorizationFilter was not registered (disabled)
demo-api : [2018-06-13 16:35:26] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 16:35:26] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'shiroFilter' to: [/*]
demo-api : [2018-06-13 16:35:26] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 16:35:26] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 16:35:26 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a9d6f02
demo-api : [2018-06-13 16:35:26] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:35:27] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 16:35:27] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
demo-api : [2018-06-13 16:35:27] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
demo-api : [2018-06-13 16:35:27] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
demo-api : [2018-06-13 16:35:27] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 16:35:27] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 16:35:27] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 16:35:27] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 16:35:27] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 16:35:27] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 16:35:28] [INFO ]
				[org.springframework.security.web.DefaultSecurityFilterChain:43]-- Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@102af1bb, org.springframework.security.web.context.SecurityContextPersistenceFilter@3041beb3, org.springframework.security.web.header.HeaderWriterFilter@ac417a2, org.springframework.security.web.csrf.CsrfFilter@1de30c31, org.springframework.security.web.authentication.logout.LogoutFilter@7856f41a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6e794f53, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e40fdbd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f9addd4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@797f97e3, org.springframework.security.web.session.SessionManagementFilter@69499c6f, org.springframework.security.web.access.ExceptionTranslationFilter@21a9f95b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@636e4bf8]
demo-api : [2018-06-13 16:35:28] [INFO ]
				[springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping:69]-- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
demo-api : [2018-06-13 16:35:28] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 16:35:28] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 16:35:28] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 16:35:28] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 16:35:28] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a9d6f02: startup date [Wed Jun 13 16:35:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@693fe6c9
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:610]-- Detected ResponseBodyAdvice bean in responseHandler
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in responseHandler
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:294]-- Detected ResponseBodyAdvice implementation in responseHandler
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a9d6f02: startup date [Wed Jun 13 16:35:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@693fe6c9
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:610]-- Detected ResponseBodyAdvice bean in responseHandler
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 16:35:29] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:84]-- 

Using generated security password: 7fc184bc-2ca7-4f8a-bf9a-093faf0af94a

demo-api : [2018-06-13 16:35:30] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5a9d6f02,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 16:35:30] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 16:35:30] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 16:35:30] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 16:35:30] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528878931627 with initial instances count: 1
demo-api : [2018-06-13 16:35:31] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528878931638, current=UP, previous=STARTING]
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 16:35:31] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 16:35:31] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 16:35:31] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 16:35:31] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 16:35:31] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 16:35:31] [INFO ]
				[springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:147]-- Context refreshed
demo-api : [2018-06-13 16:35:31] [INFO ]
				[springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:150]-- Found 1 custom documentation plugin(s)
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 16:35:31] [INFO ]
				[springfox.documentation.spring.web.scanners.ApiListingReferenceScanner:41]-- Scanning for api listing references
demo-api : [2018-06-13 16:35:31] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:35:31] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 16:35:31] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:206]-- Tomcat started on port(s): 8080 (https) with context path ''
demo-api : [2018-06-13 16:35:31] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:124]-- Updating port to 8080
demo-api : [2018-06-13 16:35:31] [INFO ]
				[com.enhinck.demo.DemoApiApplication:59]-- Started DemoApiApplication in 14.714 seconds (JVM running for 15.531)
demo-api : [2018-06-13 16:35:38] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring FrameworkServlet 'dispatcherServlet'
demo-api : [2018-06-13 16:35:38] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:494]-- FrameworkServlet 'dispatcherServlet': initialization started
demo-api : [2018-06-13 16:35:38] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:509]-- FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
demo-api : [2018-06-13 16:35:38] [INFO ]
				[org.apache.shiro.session.mgt.AbstractValidatingSessionManager:233]-- Enabling session validation scheduler...
demo-api : [2018-06-13 16:40:31] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:132]-- Application shutdown requested.
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a9d6f02: startup date [Wed Jun 13 16:35:21 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@693fe6c9
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 16:45:27] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528879527085, current=DOWN, previous=UP]
demo-api : [2018-06-13 16:45:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 16:45:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 16:45:27] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 16:35:26 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a9d6f02
demo-api : [2018-06-13 16:45:27] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 16:45:35] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1e6454ec: startup date [Wed Jun 13 16:45:35 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 16:45:35] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:45:35] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2cb8d964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:35] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 16:45:37] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=db163010b3d76b843f49ff6667351114cadff511, state=null
demo-api : [2018-06-13 16:45:37] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 16:45:37] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 16:45:37] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a194c39: startup date [Wed Jun 13 16:45:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e6454ec
demo-api : [2018-06-13 16:45:38] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 16:45:38] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 16:45:38] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 16:45:38] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=e0253fcb-9c4f-32dd-a448-31c9073881a9
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroLifecycleBeanPostProcessor' of type [com.enhinck.demo.config.ShiroLifecycleBeanPostProcessor$$EnhancerBySpringCGLIB$$339fa0e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroConfig' of type [com.enhinck.demo.config.ShiroConfig$$EnhancerBySpringCGLIB$$5865322f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'userRealm' of type [com.enhinck.demo.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'redisManager' of type [org.crazycake.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroAuthorizationFilter' of type [com.enhinck.demo.shiro.ShiroAuthorizationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:39] [INFO ]
				[com.enhinck.demo.config.ShiroConfig:144]-- shiroFilter init
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$d70a9495] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$e450e7ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$7b909196] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2cb8d964] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 16:45:40] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (https) 8443 (https)
demo-api : [2018-06-13 16:45:40] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:45:40] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 16:45:40] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to initialize connector [Connector[HTTP/1.1-8443]]
org.apache.catalina.LifecycleException: Failed to initialize component [Connector[HTTP/1.1-8443]]
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:112)
	at org.apache.catalina.core.StandardService.initInternal(StandardService.java:549)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	at org.apache.catalina.core.StandardServer.initInternal(StandardServer.java:875)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:140)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:409)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:179)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:152)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler initialization failed
	at org.apache.catalina.connector.Connector.initInternal(Connector.java:995)
	at org.apache.catalina.util.LifecycleBase.init(LifecycleBase.java:107)
	... 20 common frames omitted
Caused by: java.lang.IllegalArgumentException: Invalid keystore format
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:116)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.initialiseSsl(AbstractJsseEndpoint.java:87)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:225)
	at org.apache.tomcat.util.net.AbstractEndpoint.init(AbstractEndpoint.java:1086)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.init(AbstractJsseEndpoint.java:268)
	at org.apache.coyote.AbstractProtocol.init(AbstractProtocol.java:581)
	at org.apache.coyote.http11.AbstractHttp11Protocol.init(AbstractHttp11Protocol.java:68)
	at org.apache.catalina.connector.Connector.initInternal(Connector.java:993)
	... 21 common frames omitted
Caused by: java.io.IOException: Invalid keystore format
	at sun.security.provider.JavaKeyStore.engineLoad(JavaKeyStore.java:658)
	at sun.security.provider.JavaKeyStore$JKS.engineLoad(JavaKeyStore.java:56)
	at sun.security.provider.KeyStoreDelegator.engineLoad(KeyStoreDelegator.java:224)
	at sun.security.provider.JavaKeyStore$DualFormatJKS.engineLoad(JavaKeyStore.java:70)
	at java.security.KeyStore.load(KeyStore.java:1445)
	at org.apache.tomcat.util.net.SSLUtilBase.getStore(SSLUtilBase.java:139)
	at org.apache.tomcat.util.net.SSLHostConfig.getTruststore(SSLHostConfig.java:714)
	at org.apache.tomcat.util.net.jsse.JSSEUtil.getTrustManagers(JSSEUtil.java:304)
	at org.apache.tomcat.util.net.AbstractJsseEndpoint.createSSLContext(AbstractJsseEndpoint.java:114)
	... 28 common frames omitted
demo-api : [2018-06-13 16:45:40] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 16:45:40] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 16:45:40] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 16:45:40] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 16:45:40] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 2410 ms
demo-api : [2018-06-13 16:45:41] [INFO ]
				[com.enhinck.demo.config.RedisConfig:68]-- JedisConnectionFactory bean init success.
demo-api : [2018-06-13 16:45:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 16:45:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 16:45:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 16:45:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 16:45:42] [INFO ]
				[org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean:244]-- Mapping filter: 'springSecurityFilterChain' to: [/*]
demo-api : [2018-06-13 16:45:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 16:45:42] [INFO ]
				[org.springframework.boot.web.servlet.RegistrationBean:50]-- Filter shiroAuthorizationFilter was not registered (disabled)
demo-api : [2018-06-13 16:45:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 16:45:42] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'shiroFilter' to: [/*]
demo-api : [2018-06-13 16:45:42] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 16:45:42] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 16:45:42 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a194c39
demo-api : [2018-06-13 16:45:42] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 16:45:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 16:45:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
demo-api : [2018-06-13 16:45:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
demo-api : [2018-06-13 16:45:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
demo-api : [2018-06-13 16:45:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 16:45:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 16:45:44] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 16:45:44] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 16:45:44] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 16:45:44] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 16:45:44] [INFO ]
				[org.springframework.security.web.DefaultSecurityFilterChain:43]-- Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@50f3ba6a, org.springframework.security.web.context.SecurityContextPersistenceFilter@57b63253, org.springframework.security.web.header.HeaderWriterFilter@3de88f64, org.springframework.security.web.csrf.CsrfFilter@dbc7e0a, org.springframework.security.web.authentication.logout.LogoutFilter@7c0e4e4e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@19ac93d2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c1ea7be, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7742a276, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@319aa9ee, org.springframework.security.web.session.SessionManagementFilter@79b8ecb, org.springframework.security.web.access.ExceptionTranslationFilter@7c31e410, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4e5d5ac1]
demo-api : [2018-06-13 16:45:44] [INFO ]
				[springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping:69]-- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
demo-api : [2018-06-13 16:45:45] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 16:45:45] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 16:45:45] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 16:45:45] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 16:45:45] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 16:45:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a194c39: startup date [Wed Jun 13 16:45:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e6454ec
demo-api : [2018-06-13 16:45:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:610]-- Detected ResponseBodyAdvice bean in responseHandler
demo-api : [2018-06-13 16:45:45] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 16:45:45] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 16:45:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in responseHandler
demo-api : [2018-06-13 16:45:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:294]-- Detected ResponseBodyAdvice implementation in responseHandler
demo-api : [2018-06-13 16:45:45] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a194c39: startup date [Wed Jun 13 16:45:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e6454ec
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:610]-- Detected ResponseBodyAdvice bean in responseHandler
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 16:45:46] [INFO ]
				[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:84]-- 

Using generated security password: 17b514d4-8cc8-488d-9c4d-19b6b20d98c7

demo-api : [2018-06-13 16:45:46] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4a194c39,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528879547953 with initial instances count: 1
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528879547964, current=UP, previous=STARTING]
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 16:45:47] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 16:45:47] [INFO ]
				[springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:147]-- Context refreshed
demo-api : [2018-06-13 16:45:47] [INFO ]
				[springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:150]-- Found 1 custom documentation plugin(s)
demo-api : [2018-06-13 16:45:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 16:45:48] [INFO ]
				[springfox.documentation.spring.web.scanners.ApiListingReferenceScanner:41]-- Scanning for api listing references
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 16:45:48] [ERROR]
				[org.apache.catalina.core.StandardService:182]-- Failed to start connector [Connector[HTTP/1.1-8443]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8443]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.enhinck.demo.DemoApiApplication.main(DemoApiApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Pausing ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Stopping service [Tomcat]
demo-api : [2018-06-13 16:45:48] [WARN ]
				[org.apache.catalina.loader.WebappClassLoaderBase:180]-- The web application [ROOT] appears to have started a thread named [spring.cloud.inetutils] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.apache.catalina.util.LifecycleBase:180]-- The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8080"]
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Stopping ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Destroying ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener:101]-- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
demo-api : [2018-06-13 16:45:48] [ERROR]
				[org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:42]-- 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8443 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8443, or configure this application to listen on another port.

demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:993]-- Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a194c39: startup date [Wed Jun 13 16:45:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1e6454ec
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:65]-- Unregistering application demo-api with eureka with status DOWN
demo-api : [2018-06-13 16:45:48] [WARN ]
				[com.netflix.discovery.DiscoveryClient:1297]-- Saw local status change event StatusChangeEvent [timestamp=1528879548358, current=DOWN, previous=UP]
demo-api : [2018-06-13 16:45:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483647
demo-api : [2018-06-13 16:45:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 2147483547
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:366]-- Stopping beans in phase 0
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 0 subscriber(s).
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:199]-- stopped _org.springframework.integration.errorLogger
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:208]-- Shutting down ExecutorService 'taskScheduler'
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:451]-- Unregistering JMX-exposed beans on shutdown
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:183]-- Unregistering JMX-exposed beans
demo-api : [2018-06-13 16:45:48] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:993]-- Closing FeignContext-resource-server: startup date [Wed Jun 13 16:45:42 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a194c39
demo-api : [2018-06-13 16:45:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:888]-- Shutting down DiscoveryClient ...
demo-api : [2018-06-13 16:45:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:922]-- Unregistering ...
demo-api : [2018-06-13 16:45:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:924]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - deregister  status: 200
demo-api : [2018-06-13 16:45:51] [INFO ]
				[com.netflix.discovery.DiscoveryClient:911]-- Completed shut down of DiscoveryClient
demo-api : [2018-06-13 17:22:31] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5ace1ed4: startup date [Wed Jun 13 17:22:31 CST 2018]; root of context hierarchy
demo-api : [2018-06-13 17:22:31] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 17:22:31] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d79eb907] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:32] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:83]-- Fetching config from server at: http://localhost:8001
demo-api : [2018-06-13 17:22:38] [INFO ]
				[org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:142]-- Located environment: name=demo-api, profiles=[default], label=null, version=db163010b3d76b843f49ff6667351114cadff511, state=null
demo-api : [2018-06-13 17:22:38] [INFO ]
				[org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration:98]-- Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/Enhinck/myconfig.git/demo-api.properties'}]}
demo-api : [2018-06-13 17:22:38] [INFO ]
				[com.enhinck.demo.DemoApiApplication:659]-- No active profile set, falling back to default profiles: default
demo-api : [2018-06-13 17:22:38] [INFO ]
				[org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext:590]-- Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5669c5fb: startup date [Wed Jun 13 17:22:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5ace1ed4
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.data.repository.config.RepositoryConfigurationDelegate:163]-- Multiple Spring Data modules found, entering strict repository configuration mode!
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.integration.config.IntegrationRegistrar:349]-- No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.beans.factory.support.DefaultListableBeanFactory:824]-- Overriding bean definition for bean 'environmentWebEndpointExtension' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration; factoryMethodName=environmentWebEndpointExtension; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration$EndpointConfiguration.class]]
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.cloud.context.scope.GenericScope:293]-- BeanFactory id=e0253fcb-9c4f-32dd-a448-31c9073881a9
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:130]-- No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor:158]-- No bean named 'taskScheduler' has been explicitly defined. Therefore, a default ThreadPoolTaskScheduler will be created.
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroLifecycleBeanPostProcessor' of type [com.enhinck.demo.config.ShiroLifecycleBeanPostProcessor$$EnhancerBySpringCGLIB$$de858088] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroConfig' of type [com.enhinck.demo.config.ShiroConfig$$EnhancerBySpringCGLIB$$34b11d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'userRealm' of type [com.enhinck.demo.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'redisManager' of type [org.crazycake.shiro.RedisManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:39] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'shiroAuthorizationFilter' of type [com.enhinck.demo.shiro.ShiroAuthorizationFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:40] [INFO ]
				[com.enhinck.demo.config.ShiroConfig:144]-- shiroFilter init
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$81f07438] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.kafka.annotation.KafkaBootstrapConfiguration' of type [org.springframework.kafka.annotation.KafkaBootstrapConfiguration$$EnhancerBySpringCGLIB$$8f36c78d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration$$EnhancerBySpringCGLIB$$26767139] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:328]-- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d79eb907] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:91]-- Tomcat initialized with port(s): 8080 (http) 8443 (https)
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Initializing ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.apache.catalina.core.StandardService:180]-- Starting service [Tomcat]
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.apache.catalina.core.StandardEngine:180]-- Starting Servlet Engine: Apache Tomcat/8.5.29
demo-api : [2018-06-13 17:22:40] [INFO ]
				[org.apache.catalina.core.AprLifecycleListener:180]-- The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_144/bin/../jre/lib/amd64;C:\Program Files\Docker\Docker\Resources\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jdk1.8.0_144\jre\bin;C:\apache-maven-3.5.3\bin;D:\Program Files\MongoDB\Server\3.6\bin;;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\PuTTY\;C:\Program Files\nodejs\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\development\eclipse-jee-oxygen;;.]
demo-api : [2018-06-13 17:22:41] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring embedded WebApplicationContext
demo-api : [2018-06-13 17:22:41] [INFO ]
				[org.springframework.web.context.ContextLoader:285]-- Root WebApplicationContext: initialization completed in 2408 ms
demo-api : [2018-06-13 17:22:41] [INFO ]
				[com.enhinck.demo.config.RedisConfig:68]-- JedisConnectionFactory bean init success.
demo-api : [2018-06-13 17:22:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'characterEncodingFilter' to: [/*]
demo-api : [2018-06-13 17:22:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
demo-api : [2018-06-13 17:22:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpPutFormContentFilter' to: [/*]
demo-api : [2018-06-13 17:22:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'requestContextFilter' to: [/*]
demo-api : [2018-06-13 17:22:43] [INFO ]
				[org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean:244]-- Mapping filter: 'springSecurityFilterChain' to: [/*]
demo-api : [2018-06-13 17:22:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'httpTraceFilter' to: [/*]
demo-api : [2018-06-13 17:22:43] [INFO ]
				[org.springframework.boot.web.servlet.RegistrationBean:50]-- Filter shiroAuthorizationFilter was not registered (disabled)
demo-api : [2018-06-13 17:22:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'webMvcMetricsFilter' to: [/*]
demo-api : [2018-06-13 17:22:43] [INFO ]
				[org.springframework.boot.web.servlet.FilterRegistrationBean:244]-- Mapping filter: 'shiroFilter' to: [/*]
demo-api : [2018-06-13 17:22:43] [INFO ]
				[org.springframework.boot.web.servlet.ServletRegistrationBean:185]-- Servlet dispatcherServlet mapped to [/]
demo-api : [2018-06-13 17:22:43] [INFO ]
				[org.springframework.context.annotation.AnnotationConfigApplicationContext:590]-- Refreshing FeignContext-resource-server: startup date [Wed Jun 13 17:22:43 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5669c5fb
demo-api : [2018-06-13 17:22:43] [INFO ]
				[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154]-- JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
demo-api : [2018-06-13 17:22:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/api/demo/test],methods=[POST]}" onto public java.lang.String com.enhinck.demo.api.DemoController.login(java.lang.String)
demo-api : [2018-06-13 17:22:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
demo-api : [2018-06-13 17:22:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
demo-api : [2018-06-13 17:22:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
demo-api : [2018-06-13 17:22:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
demo-api : [2018-06-13 17:22:44] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:547]-- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 17:22:44] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver:59]-- Exposing 2 endpoint(s) beneath base path '/actuator'
demo-api : [2018-06-13 17:22:44] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 17:22:44] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
demo-api : [2018-06-13 17:22:44] [INFO ]
				[org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping:547]-- Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
demo-api : [2018-06-13 17:22:45] [INFO ]
				[org.springframework.security.web.DefaultSecurityFilterChain:43]-- Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@646cb2e, org.springframework.security.web.context.SecurityContextPersistenceFilter@35b3c1f6, org.springframework.security.web.header.HeaderWriterFilter@6fc0e448, org.springframework.security.web.csrf.CsrfFilter@7ba1cdbe, org.springframework.security.web.authentication.logout.LogoutFilter@fde487b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@160c7c42, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2beee3e8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f112f70, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2e7a9db7, org.springframework.security.web.session.SessionManagementFilter@4db6348b, org.springframework.security.web.access.ExceptionTranslationFilter@2ce47652, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@67c0c90b]
demo-api : [2018-06-13 17:22:45] [INFO ]
				[springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping:69]-- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
demo-api : [2018-06-13 17:22:45] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 17:22:45] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 17:22:45] [WARN ]
				[com.netflix.config.sources.URLConfigurationSource:121]-- No URLs will be polled as dynamic configuration sources.
demo-api : [2018-06-13 17:22:45] [INFO ]
				[com.netflix.config.sources.URLConfigurationSource:122]-- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
demo-api : [2018-06-13 17:22:45] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5669c5fb: startup date [Wed Jun 13 17:22:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5ace1ed4
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:610]-- Detected ResponseBodyAdvice bean in responseHandler
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping:373]-- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in responseHandler
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:294]-- Detected ResponseBodyAdvice implementation in responseHandler
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver:288]-- Detected @ExceptionHandler methods in repositoryRestExceptionHandler
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:574]-- Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5669c5fb: startup date [Wed Jun 13 17:22:38 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5ace1ed4
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerAdapter:610]-- Detected ResponseBodyAdvice bean in responseHandler
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.RepositoryRestHandlerMapping:547]-- Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
demo-api : [2018-06-13 17:22:46] [INFO ]
				[org.springframework.data.rest.webmvc.BasePathAwareHandlerMapping:547]-- Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler:171]-- Initializing ExecutorService  'taskScheduler'
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration:84]-- 

Using generated security password: 7c5fc003-214d-4c8d-a8f3-42915d556157

demo-api : [2018-06-13 17:22:47] [WARN ]
				[org.springframework.boot.starter.redis.RedisStarterDeprecationWarningAutoConfiguration:43]-- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.web.socket.server.standard.ServerEndpointExporter:149]-- Registering @ServerEndpoint class: class com.enhinck.demo.websocket.MyWebSocket
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:433]-- Registering beans for JMX exposure on startup
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'environmentManager' has been autodetected for JMX exposure
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:895]-- Bean with name 'refreshScope' has been autodetected for JMX exposure
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5669c5fb,type=ConfigurationPropertiesRebinder]
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.jmx.export.annotation.AnnotationMBeanExporter:675]-- Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 0
demo-api : [2018-06-13 17:22:47] [INFO ]
				[org.springframework.cloud.netflix.eureka.InstanceInfoFactory:71]-- Setting initial instance status as: STARTING
demo-api : [2018-06-13 17:22:47] [INFO ]
				[com.netflix.discovery.DiscoveryClient:349]-- Initializing Eureka in region us-east-1
demo-api : [2018-06-13 17:22:47] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:70]-- Using JSON encoding codec LegacyJacksonJson
demo-api : [2018-06-13 17:22:47] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:71]-- Using JSON decoding codec LegacyJacksonJson
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:80]-- Using XML encoding codec XStreamXml
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.provider.DiscoveryJerseyProvider:81]-- Using XML decoding codec XStreamXml
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: true
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1264]-- Starting heartbeat executor: renew interval is: 30
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.InstanceInfoReplicator:60]-- InstanceInfoReplicator onDemand update allowed rate per min is 4
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:449]-- Discovery Client initialized at timestamp 1528881768611 with initial instances count: 0
demo-api : [2018-06-13 17:22:48] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:42]-- Registering application demo-api with eureka with status UP
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1299]-- Saw local status change event StatusChangeEvent [timestamp=1528881768625, current=UP, previous=STARTING]
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:826]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080: registering service...
demo-api : [2018-06-13 17:22:48] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:107]-- Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel
demo-api : [2018-06-13 17:22:48] [INFO ]
				[org.springframework.integration.channel.PublishSubscribeChannel:64]-- Channel 'demo-api-1.errorChannel' has 1 subscriber(s).
demo-api : [2018-06-13 17:22:48] [INFO ]
				[org.springframework.integration.endpoint.EventDrivenConsumer:165]-- started _org.springframework.integration.errorLogger
demo-api : [2018-06-13 17:22:48] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483547
demo-api : [2018-06-13 17:22:48] [INFO ]
				[org.springframework.context.support.DefaultLifecycleProcessor:351]-- Starting beans in phase 2147483647
demo-api : [2018-06-13 17:22:48] [INFO ]
				[springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:147]-- Context refreshed
demo-api : [2018-06-13 17:22:48] [INFO ]
				[springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper:150]-- Found 1 custom documentation plugin(s)
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.netflix.discovery.DiscoveryClient:835]-- DiscoveryClient_DEMO-API/windows10.microdone.cn:demo-api:8080 - registration status: 204
demo-api : [2018-06-13 17:22:48] [INFO ]
				[springfox.documentation.spring.web.scanners.ApiListingReferenceScanner:41]-- Scanning for api listing references
demo-api : [2018-06-13 17:22:48] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["http-nio-8080"]
demo-api : [2018-06-13 17:22:48] [INFO ]
				[org.apache.tomcat.util.net.NioSelectorPool:180]-- Using a shared selector for servlet write/read
demo-api : [2018-06-13 17:22:48] [INFO ]
				[org.apache.coyote.http11.Http11NioProtocol:180]-- Starting ProtocolHandler ["https-jsse-nio-8443"]
demo-api : [2018-06-13 17:22:48] [INFO ]
				[org.springframework.boot.web.embedded.tomcat.TomcatWebServer:206]-- Tomcat started on port(s): 8080 (http) 8443 (https) with context path ''
demo-api : [2018-06-13 17:22:48] [INFO ]
				[org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:124]-- Updating port to 8080
demo-api : [2018-06-13 17:22:48] [INFO ]
				[com.enhinck.demo.DemoApiApplication:59]-- Started DemoApiApplication in 17.855 seconds (JVM running for 18.67)
demo-api : [2018-06-13 17:23:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:958]-- Disable delta property : false
demo-api : [2018-06-13 17:23:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:959]-- Single vip registry refresh property : null
demo-api : [2018-06-13 17:23:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:960]-- Force full registry fetch : false
demo-api : [2018-06-13 17:23:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:961]-- Application is null : false
demo-api : [2018-06-13 17:23:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:962]-- Registered Applications size is zero : true
demo-api : [2018-06-13 17:23:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:964]-- Application version is -1: false
demo-api : [2018-06-13 17:23:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1047]-- Getting all instance registry info from the eureka server
demo-api : [2018-06-13 17:23:18] [INFO ]
				[com.netflix.discovery.DiscoveryClient:1056]-- The response status is 200
demo-api : [2018-06-13 17:24:06] [INFO ]
				[org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]:180]-- Initializing Spring FrameworkServlet 'dispatcherServlet'
demo-api : [2018-06-13 17:24:06] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:494]-- FrameworkServlet 'dispatcherServlet': initialization started
demo-api : [2018-06-13 17:24:06] [INFO ]
				[org.springframework.web.servlet.DispatcherServlet:509]-- FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
demo-api : [2018-06-13 17:24:06] [INFO ]
				[org.apache.shiro.session.mgt.AbstractValidatingSessionManager:233]-- Enabling session validation scheduler...
demo-api : [2018-06-13 17:27:48] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 17:32:48] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 17:37:48] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 17:42:48] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 17:47:48] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
demo-api : [2018-06-13 17:52:48] [INFO ]
				[com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:43]-- Resolving eureka endpoints via configuration
